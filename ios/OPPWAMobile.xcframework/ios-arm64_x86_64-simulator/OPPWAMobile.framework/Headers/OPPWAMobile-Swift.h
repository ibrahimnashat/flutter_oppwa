#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef OPPWAMOBILE_SWIFT_H
#define OPPWAMOBILE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import PassKit;
@import SafariServices;
@import UIKit;
@import Vision;
@import WebKit;
@import ipworks3ds_sdk;
#endif

#import <OPPWAMobile/OPPWAMobile.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OPPWAMobile",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class OPPTransaction;

@interface NSError (SWIFT_EXTENSION(OPPWAMobile))
+ (NSError * _Nonnull)afterPayFamilyErrorWithTransaction:(OPPTransaction * _Nonnull)transaction SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPAddressCodes")
@interface OPPAddressCodes : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCountryCodeUSA;)
+ (NSString * _Nonnull)kCountryCodeUSA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCountryCodeCanada;)
+ (NSString * _Nonnull)kCountryCodeCanada SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getCountries SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getUsStates SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getCaStates SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getCountryNameWithCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getCountryCodeWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getStateNameWithCode:(NSString * _Nonnull)stateCode countryCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getStateCodeWithName:(NSString * _Nonnull)state countryCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCountryCodeIsValid:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPAddressField, open) {
  OPPAddressFieldStreet1 = 0,
  OPPAddressFieldStreet2 = 1,
  OPPAddressFieldCity = 2,
  OPPAddressFieldState = 3,
  OPPAddressFieldCountry = 4,
  OPPAddressFieldPostCode = 5,
};

@protocol OPPAddressSelectorViewControllerDelegate;
@class OPPAddressSelectorViewModel;
@class NSCoder;
@class NSBundle;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPAddressSelectorViewController")
@interface OPPAddressSelectorViewController : UIViewController
@property (nonatomic, weak) id <OPPAddressSelectorViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithViewModel:(OPPAddressSelectorViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile40OPPAddressSelectorViewControllerDelegate_")
@protocol OPPAddressSelectorViewControllerDelegate <NSObject>
- (void)returnSelected:(NSString * _Nullable)value and:(NSInteger)tag;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile27OPPAddressSelectorViewModel")
@interface OPPAddressSelectorViewModel : NSObject
- (nonnull instancetype)initWithArray:(NSArray<NSString *> * _Nonnull)array addressField:(enum OPPAddressField)addressField backButtonTitle:(NSString * _Nullable)backButtonTitle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPAddressViewDelegate;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPAddressView")
@interface OPPAddressView : UIView
@property (nonatomic, weak) id <OPPAddressViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)setStreet1Line:(NSString * _Nullable)street1Line;
- (void)setStreet2Line:(NSString * _Nullable)street2Line;
- (void)setCityStatePostCodeLine:(NSString * _Nullable)cityLine;
- (void)setCountryLine:(NSString * _Nullable)countyLine;
- (void)switchToEnabledState:(BOOL)enabled;
- (BOOL)isAddressInEnabledState SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile22OPPAddressViewDelegate_")
@protocol OPPAddressViewDelegate
- (void)addressViewClickedAction;
@end


/// This class represents the affirm configration in checkout info.
SWIFT_CLASS("_TtC11OPPWAMobile15OPPAffirmConfig")
@interface OPPAffirmConfig : NSObject
/// Public key required for affirm object configuration.
@property (nonatomic, readonly, copy) NSString * _Nonnull publicKey;
/// Indicates active VCN configuration.
@property (nonatomic, readonly) BOOL isActive;
/// Creates affirm object.
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey isActive:(BOOL)isActive OBJC_DESIGNATED_INITIALIZER;
/// To do equality check on configuration object.
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Class to encapsulate all necessary transaction parameters for performing affirm transaction.
SWIFT_CLASS("_TtC11OPPWAMobile22OPPAffirmPaymentParams")
@interface OPPAffirmPaymentParams : OPPPaymentParams
@property (nonatomic, copy) NSString * _Nullable token;
/// Create affirm payment parameters object.
+ (OPPAffirmPaymentParams * _Nullable)affirmPaymentParamsWithCheckoutId:(NSString * _Nonnull)checkoutId error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary * _Nonnull)dictionaryForExecutingTransaction SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID paymentBrand:(NSString * _Nullable)paymentBrand error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPAffirmProcessor (SWIFT_EXTENSION(OPPWAMobile))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilAffirmCheckoutConfig;)
+ (NSString * _Nonnull)kNilAffirmCheckoutConfig SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilCheckoutData;)
+ (NSString * _Nonnull)kNilCheckoutData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilAffirmCheckoutData;)
+ (NSString * _Nonnull)kNilAffirmCheckoutData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilAffirmCheckoutView;)
+ (NSString * _Nonnull)kNilAffirmCheckoutView SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kShopperCancelledTransaction;)
+ (NSString * _Nonnull)kShopperCancelledTransaction SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCheckoutCancelledWithReason;)
+ (NSString * _Nonnull)kCheckoutCancelledWithReason SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kAffirmSdkNotLoaded;)
+ (NSString * _Nonnull)kAffirmSdkNotLoaded SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kInvalidUnitPrice;)
+ (NSString * _Nonnull)kInvalidUnitPrice SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kInvalidCheckoutAmount;)
+ (NSString * _Nonnull)kInvalidCheckoutAmount SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kInvalidDiscountAmount;)
+ (NSString * _Nonnull)kInvalidDiscountAmount SWIFT_WARN_UNUSED_RESULT;
@end

enum OPPAmazonPayRegion : NSInteger;

/// Class to encapsulate all necessary brand configurations required for AmazonPay  transaction.
SWIFT_CLASS("_TtC11OPPWAMobile18OPPAmazonPayConfig")
@interface OPPAmazonPayConfig : OPPBrandConfig
/// AmazonPay region object.
@property (nonatomic, readonly) enum OPPAmazonPayRegion region;
/// Creates an object representing an AmazonPay brand configuration.
- (nonnull instancetype)initWithRegion:(enum OPPAmazonPayRegion)region OBJC_DESIGNATED_INITIALIZER;
/// Payment brand for the configuration object.
@property (nonatomic, readonly) OPPPaymentBrand _Nonnull paymentBrand;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// An enumeration for the possible regions for AmazonPay.
typedef SWIFT_ENUM(NSInteger, OPPAmazonPayRegion, open) {
  OPPAmazonPayRegionUS = 0,
  OPPAmazonPayRegionDE = 1,
  OPPAmazonPayRegionUK = 2,
  OPPAmazonPayRegionFR = 3,
  OPPAmazonPayRegionIT = 4,
  OPPAmazonPayRegionES = 5,
  OPPAmazonPayRegionJP = 6,
};


/// Class to encapsulate all necessary transaction parameters for performing
/// AmazonPay Payments transaction.
SWIFT_CLASS("_TtC11OPPWAMobile25OPPAmazonPayPaymentParams")
@interface OPPAmazonPayPaymentParams : OPPPaymentParams
/// AmazonPay configuration object.
@property (nonatomic, readonly, strong) OPPAmazonPayConfig * _Nonnull configuration;
/// :nodoc:
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID configuration:(OPPAmazonPayConfig * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
/// Creates an object representing an AmazonPay transaction.
/// @param checkoutID The checkout ID of the transaction. Must be not <code>nil</code> or empty.
/// @param configuration Set  AmazonPay brand configuration.
/// @return Returns an object representing an AmazonPay transaction.
+ (OPPAmazonPayPaymentParams * _Nullable)amazonPayPaymentParamsWithCheckoutID:(NSString * _Nonnull)checkoutID configuration:(OPPAmazonPayConfig * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary * _Nonnull)dictionaryForExecutingTransaction SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID paymentBrand:(NSString * _Nullable)paymentBrand error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
@end

@class NSURL;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile26OPPAmazonPayResponseParser")
@interface OPPAmazonPayResponseParser : NSObject
- (nonnull instancetype)initWithTransaction:(OPPTransaction * _Nonnull)transaction OBJC_DESIGNATED_INITIALIZER;
- (NSURL * _Nullable)getRedirectUrlFrom:(id _Nonnull)response error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPAnalyticsData")
@interface OPPAnalyticsData : NSObject
+ (NSString * _Nonnull)getOS SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getRedShieldBlackbox SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getMSDKVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getDeviceModel SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPAnalyticsDataIntegrationType, open) {
  OPPAnalyticsDataIntegrationTypeCustom = 0,
  OPPAnalyticsDataIntegrationTypeCheckoutUI = 1,
  OPPAnalyticsDataIntegrationTypeDropInButton = 2,
};

@class OPPCheckoutProvider;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile19OPPApplePayDelegate")
@interface OPPApplePayDelegate : NSObject
@property (nonatomic, strong) OPPCheckoutProvider * _Nullable checkoutProvider;
@property (nonatomic, copy) void (^ _Nullable successfulCompletion)(OPPPaymentParams * _Nonnull);
- (void)cleanUp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PKPaymentAuthorizationViewController;
@class PKShippingMethod;
@class PKPaymentRequestShippingMethodUpdate;
@class PKPaymentSummaryItem;
@class PKContact;
@class PKPaymentRequestShippingContactUpdate;
@class PKPayment;
@class PKPaymentAuthorizationResult;

@interface OPPApplePayDelegate (SWIFT_EXTENSION(OPPWAMobile)) <PKPaymentAuthorizationViewControllerDelegate>
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingMethod:(PKShippingMethod * _Nonnull)shippingMethod handler:(void (^ _Nonnull)(PKPaymentRequestShippingMethodUpdate * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingMethod:(PKShippingMethod * _Nonnull)shippingMethod completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus, NSArray<PKPaymentSummaryItem *> * _Nonnull))completion;
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingContact:(PKContact * _Nonnull)contact handler:(void (^ _Nonnull)(PKPaymentRequestShippingContactUpdate * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingContact:(PKContact * _Nonnull)contact completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus, NSArray<PKShippingMethod *> * _Nonnull, NSArray<PKPaymentSummaryItem *> * _Nonnull))completion;
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didAuthorizePayment:(PKPayment * _Nonnull)payment handler:(void (^ _Nonnull)(PKPaymentAuthorizationResult * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didAuthorizePayment:(PKPayment * _Nonnull)payment completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus))completion;
- (void)paymentAuthorizationViewControllerDidFinish:(PKPaymentAuthorizationViewController * _Nonnull)controller;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPApplePayStatus, open) {
  OPPApplePayStatusInitialized = 0,
  OPPApplePayStatusMerchantRejected = 1,
  OPPApplePayStatusAppleAuthorized = 2,
};

@class PKPaymentRequest;
@class OPPCheckoutInfo;
@class OPPApplePayRequestAuthorizationResult;
@class OPPApplePayRequestShippingContactUpdate;
@class OPPApplePayRequestShippingMethodUpdate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPApplePayUtil")
@interface OPPApplePayUtil : NSObject
+ (PKPaymentRequest * _Nullable)applePayPaymentRequestFor:(PKPaymentRequest * _Nullable)request and:(OPPCheckoutInfo * _Nullable)checkoutInfo SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)canSubmitApplePayRequestFor:(PKPaymentRequest * _Nullable)request SWIFT_WARN_UNUSED_RESULT;
+ (PKPaymentAuthorizationViewController * _Nullable)getApplePayViewControllerFor:(PKPaymentRequest * _Nonnull)request SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isRecurringPaymentRequestEnabledWith:(PKPaymentRequest * _Nullable)request SWIFT_WARN_UNUSED_RESULT;
+ (PKPaymentAuthorizationResult * _Nonnull)convertAuthorizationWithResult:(OPPApplePayRequestAuthorizationResult * _Nonnull)result SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
+ (PKPaymentRequestShippingContactUpdate * _Nonnull)convertShippingContactWithUpdate:(OPPApplePayRequestShippingContactUpdate * _Nonnull)update SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
+ (PKPaymentRequestShippingMethodUpdate * _Nonnull)convertShippingMethodWithUpdate:(OPPApplePayRequestShippingMethodUpdate * _Nonnull)update SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPBankAccountPaymentParams (SWIFT_EXTENSION(OPPWAMobile))
+ (NSArray<NSString *> * _Nullable)tvr_titlesFor:(NSString * _Nullable)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)tvr_valueFor:(NSString * _Nonnull)title paymentBrand:(NSString * _Nullable)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)tvr_countryCodeWith:(NSString * _Nonnull)country SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)tvr_bankNameCodeWith:(NSString * _Nonnull)bankName SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerTransitionCoordinator;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPBaseCardScanningViewController")
@interface OPPBaseCardScanningViewController : UIViewController <AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class OPPBlikDetailsViewModel;
@class OPPPaymentFormHeaderView;
@protocol SFSafariViewControllerDelegate;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPBlikDetailsViewController")
@interface OPPBlikDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPBlikDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (void)loadURL:(OPPTransaction * _Nonnull)transaction;
- (void)reEnterPin;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <SFSafariViewControllerDelegate>
@end

@class UITextView;
@class UITextItem;
@class UIAction;

@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextViewDelegate>
- (UIAction * _Nullable)textView:(UITextView * _Nonnull)textView primaryActionForTextItem:(UITextItem * _Nonnull)textItem defaultAction:(UIAction * _Nonnull)defaultAction SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=17.0);
@end


@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
+ (OPPBlikDetailsViewController * _Nullable)sharedInstance:(OPPBlikDetailsViewModel * _Nonnull)viewModel SWIFT_WARN_UNUSED_RESULT;
@end

@class WKWebView;
@class WKNavigationAction;
@class WKNavigation;

@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPBlikDetailsViewModel")
@interface OPPBlikDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImageView;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPBrandCollectionViewCell")
@interface OPPBrandCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imageView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified wrapperView;
@property (nonatomic, getter=isSelected) BOOL selected;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCardBrandInfo;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile12OPPBrandInfo")
@interface OPPBrandInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull brand;
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
@property (nonatomic, readonly, copy) NSString * _Nonnull renderType;
@property (nonatomic, strong) OPPCardBrandInfo * _Nullable cardBrandInfo;
@property (nonatomic) BOOL isCustomUiRequired;
- (nullable instancetype)initWithBrand:(NSString * _Nonnull)brand renderType:(NSString * _Nonnull)renderType label:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithBrand:(NSString * _Nonnull)brand json:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile18OPPBrandsValidator")
@interface OPPBrandsValidator : NSObject
+ (BOOL)isCardBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getLabelForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasCustomUiForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getBrandsWithMissingUi SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UINavigationController;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile14OPPBrowserData")
@interface OPPBrowserData : NSObject
+ (void)m3dspAddWebThreeDSParamsTo:(OPPPaymentParams * _Nonnull)params controller:(UINavigationController * _Nonnull)controller :(void (^ _Nonnull)(void))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>OPPCDBilling</code> holds the billing address of the customer.
SWIFT_CLASS("_TtC11OPPWAMobile12OPPCDBilling")
@interface OPPCDBilling : NSObject
/// The door number, floor, building number, building name, and/or street name of the billing address.
@property (nonatomic, copy) NSString * _Nullable street1;
/// The adjoining road or locality (if required) of the billing address.
@property (nonatomic, copy) NSString * _Nullable street2;
/// The town or city of the billing address.
@property (nonatomic, copy) NSString * _Nullable city;
/// The state or region of the billing address.
@property (nonatomic, copy) NSString * _Nullable state;
/// The postal code or zip code of the billing address.
@property (nonatomic, copy) NSString * _Nullable postcode;
/// The country of the billing address.
@property (nonatomic, copy) NSString * _Nullable country;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCDItem;

/// The Cart holds the cart items information.
SWIFT_CLASS("_TtC11OPPWAMobile9OPPCDCart")
@interface OPPCDCart : NSObject
/// List of items in the cart.
@property (nonatomic, copy) NSArray<OPPCDItem *> * _Nullable items;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provides the customer details like name, email, etc.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPCDCustomer")
@interface OPPCDCustomer : NSObject
/// The given name or first name of customer.
@property (nonatomic, copy) NSString * _Nullable givenName;
/// The last name or surname of customer.
@property (nonatomic, copy) NSString * _Nullable surname;
/// The email of customer.
@property (nonatomic, copy) NSString * _Nullable email;
/// The fullname of customer by combining given name and surname.
@property (nonatomic, readonly, copy) NSString * _Nullable fullName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The<code>OPPCDItem</code> holds the product information such as the product’s name, quantity, price and more.
SWIFT_CLASS("_TtC11OPPWAMobile9OPPCDItem")
@interface OPPCDItem : NSObject
/// The name of an item in the shopping cart.
@property (nonatomic, copy) NSString * _Nullable name;
/// The number of items in the shopping cart.
@property (nonatomic, copy) NSString * _Nullable quantity;
/// The price of an item in the shopping cart.
@property (nonatomic, copy) NSString * _Nullable price;
/// The sku of an item in the cart item.
@property (nonatomic, copy) NSString * _Nullable sku;
/// The cart item’s URL.
@property (nonatomic, copy) NSString * _Nullable productURL;
/// The cart item’s image URL.
@property (nonatomic, copy) NSString * _Nullable imageURL;
/// The cart item’s total discount amount.
@property (nonatomic, copy) NSString * _Nullable totalDiscountAmount;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The Merchant holds the merchant information.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPCDMerchant")
@interface OPPCDMerchant : NSObject
/// To get or set the merchant name.
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>OPPCDShipping</code> holds the shipping details of ordered goods.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPCDShipping")
@interface OPPCDShipping : NSObject
/// The door number, floor, building number, building name, and/or street name of the shipping address.
@property (nonatomic, copy) NSString * _Nullable street1;
/// The adjoining road or locality (if required) of the shipping address.
@property (nonatomic, copy) NSString * _Nullable street2;
/// The town or city of the shipping address.
@property (nonatomic, copy) NSString * _Nullable city;
/// The state or region of the shipping address.
@property (nonatomic, copy) NSString * _Nullable state;
/// The postal code or zip code of the shipping address.
@property (nonatomic, copy) NSString * _Nullable postcode;
/// The country of the shipping address.
@property (nonatomic, copy) NSString * _Nullable country;
/// The total amount of the shipping cost.
@property (nonatomic, copy) NSString * _Nullable cost;
/// Provides the customer details.
@property (nonatomic, strong) OPPCDCustomer * _Nullable customer;
/// The phone number for shipping address.
@property (nonatomic, copy) NSString * _Nullable phone;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum OPPCardBrandInfoCvvMode : NSInteger;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardBrandInfo")
@interface OPPCardBrandInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull validationRegex;
@property (nonatomic, readonly, copy) NSString * _Nullable detectionRegex;
@property (nonatomic, readonly, copy) NSString * _Nonnull pattern;
@property (nonatomic) NSInteger cvvLength;
@property (nonatomic) BOOL isLuhnCheckRequired;
@property (nonatomic) BOOL isExpiryDateOptional;
@property (nonatomic) enum OPPCardBrandInfoCvvMode cvvMode;
@property (nonatomic) BOOL isMobilePhoneRequired;
- (nullable instancetype)initWithValidationRegex:(NSString * _Nonnull)validationRegex detectionRegex:(NSString * _Nullable)detectionRegex pattern:(NSString * _Nonnull)pattern OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPCardBrandInfoCvvMode, open) {
  OPPCardBrandInfoCvvModeNone = 0,
  OPPCardBrandInfoCvvModeRequired = 1,
  OPPCardBrandInfoCvvModeOptional = 2,
};

@class OPPSCardDetailsViewModel;
@class UITextField;
@class UIPickerView;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardDetailsViewController")
@interface OPPCardDetailsViewController : OPPRootViewController
@property (nonatomic, readonly, strong) OPPSCardDetailsViewModel * _Nonnull viewModel;
@property (nonatomic, strong) UITextField * _Nullable activeTextField;
@property (nonatomic, strong) UIPickerView * _Nullable installmentsPickerView;
- (nullable instancetype)initWithViewModel:(OPPSCardDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPAddressViewDelegate>
- (void)addressViewClickedAction;
@end

@class OPPBillingAddress;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile36OPPEditAddressViewControllerDelegate_")
@protocol OPPEditAddressViewControllerDelegate
- (void)updateAddress:(OPPBillingAddress * _Nonnull)address;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPEditAddressViewControllerDelegate>
- (void)updateAddress:(OPPBillingAddress * _Nonnull)address;
@end

@class NSNotification;

@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end

@class OPPCardScanningResult;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile37OPPCardScanningViewControllerDelegate_") SWIFT_AVAILABILITY(ios,introduced=13.0)
@protocol OPPCardScanningViewControllerDelegate <NSObject>
- (void)cardScan:(UIViewController * _Nonnull)viewController didFinishWith:(OPPCardScanningResult * _Nullable)result and:(NSError * _Nullable)error;
- (void)cardScanDidCancel:(UIViewController * _Nonnull)viewController;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPCardScanningViewControllerDelegate>
- (void)cardScan:(UIViewController * _Nonnull)viewController didFinishWith:(OPPCardScanningResult * _Nullable)result and:(NSError * _Nullable)error;
- (void)cardScanDidCancel:(UIViewController * _Nonnull)viewController;
@end





@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)updateViewConstraints;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)updateViewWithAnimation;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UIPickerViewDataSource, UIPickerViewDelegate>
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
@end

@class UICollectionView;
@class NSIndexPath;

@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end




@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end



@class VNRequest;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardScanUtils")
@interface OPPCardScanUtils : NSObject
+ (void)expirationDate:(VNRequest * _Nonnull)request completion:(SWIFT_NOESCAPE void (^ _Nonnull)(NSString * _Nonnull, VNConfidence))completion SWIFT_AVAILABILITY(ios,introduced=13.0);
+ (void)cardNumber:(VNRequest * _Nonnull)request completion:(SWIFT_NOESCAPE void (^ _Nonnull)(NSString * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=13.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPCardScanningConstants")
@interface OPPCardScanningConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCardScanningAvailabilityMessage;)
+ (NSString * _Nonnull)kCardScanningAvailabilityMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPCardScanningResult")
@interface OPPCardScanningResult : NSObject
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardScanningViewController") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface OPPCardScanningViewController : OPPBaseCardScanningViewController
@property (nonatomic, weak) id <OPPCardScanningViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(BOOL)animated;
@end

@class AVCaptureOutput;
@class AVCaptureConnection;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface OPPCardScanningViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end




/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardValidator")
@interface OPPCardValidator : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardValidatorDefaultNumberRegex;)
+ (NSString * _Nonnull)OPPCardValidatorDefaultNumberRegex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardValidatorDefaultNumberPattern;)
+ (NSString * _Nonnull)OPPCardValidatorDefaultNumberPattern SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger OPPCardValidatorDefaultCVVLength;)
+ (NSInteger)OPPCardValidatorDefaultCVVLength SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)cvvLengthForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)paymentBrandsDetectedForCardNumber:(NSString * _Nonnull)cardNumber includeUnknown:(BOOL)includeUnknown SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)validateWithCardNumber:(NSString * _Nonnull)cardNumber paymentBrand:(NSString * _Nonnull)paymentBrand detectedBrands:(NSArray<NSString *> * _Nullable)detectedBrands SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)patternForCardNumberWithPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isExpiryDateOptionalForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (enum OPPCardBrandInfoCvvMode)cvvModeForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isMobilePhoneRequiredForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)detectionRegexForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPassingLuhnCheckWithCardNumber:(NSString * _Nonnull)cardNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol OPPCardControllerDelegate;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardViewController")
@interface OPPCardViewController : UIViewController
@property (nonatomic, strong) id <OPPCardControllerDelegate> _Nullable cardControllerDelegate;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)updateViewConstraints;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPAddressViewDelegate, OPPEditAddressViewControllerDelegate>
- (void)addressViewClickedAction;
- (void)updateAddress:(OPPBillingAddress * _Nonnull)address;
@end


@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPCardDetailsDataSource>
- (UITextField * _Nonnull)cardControllerCardNumberTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerCardHolderTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerExpirationDateTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerCVVTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerMobilePhoneField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerCountryCodeField SWIFT_WARN_UNUSED_RESULT;
- (void)cardControllerTextField:(UITextField * _Nonnull)textField errorDidHappen:(NSError * _Nullable)error;
- (void)cardControllerTextField:(UITextField * _Nonnull)textField shouldChangeVisibility:(BOOL)hidden;
- (void)cardControllerOnPaymentBrandsDetected:(NSArray<NSString *> * _Nullable)paymentBrands error:(NSError * _Nullable)error;
@end


@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <UIPickerViewDataSource, UIPickerViewDelegate, UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPCardsSectionDelegate")
@interface OPPCardsSectionDelegate : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardCollectionViewCellReuseId;)
+ (NSString * _Nonnull)OPPCardCollectionViewCellReuseId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPCardsSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface OPPCardsSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardsTableViewCell")
@interface OPPCardsTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPCardsCollectionCellWidth;)
+ (CGFloat)OPPCardsCollectionCellWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPCardsCollectionCellHeight;)
+ (CGFloat)OPPCardsCollectionCellHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPCardsCollectionCellMinItemSpace;)
+ (CGFloat)OPPCardsCollectionCellMinItemSpace SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSLocale;

/// Class to encapsulate all necessary brand configurations required for Cash App Pay  transaction.
SWIFT_CLASS("_TtC11OPPWAMobile24OPPCashAppPayBrandConfig")
@interface OPPCashAppPayBrandConfig : OPPAfterpayConfig
/// Creates an object representing an Cash App Pay brand configuration.
- (nullable instancetype)initWithMinimumAmount:(NSString * _Nonnull)minimumAmount maximumAmount:(NSString * _Nonnull)maximumAmount currencyCode:(NSString * _Nonnull)currencyCode locale:(NSLocale * _Nonnull)locale consumerLocale:(NSLocale * _Nonnull)consumerLocale OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) OPPPaymentBrand _Nonnull paymentBrand;
- (nullable instancetype)initWithWithMinimumAmount:(NSString * _Nonnull)minimumAmount maximumAmount:(NSString * _Nonnull)maximumAmount locale:(NSLocale * _Nonnull)locale consumerLocale:(NSLocale * _Nonnull)consumerLocale SWIFT_UNAVAILABLE;
@end


@interface OPPCashAppPayProcessor (SWIFT_EXTENSION(OPPWAMobile))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderToken;)
+ (NSString * _Nonnull)kFailedToSigningOrderToken SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToInvalidAmount;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToInvalidAmount SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToInvalidRedirectURL;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToInvalidRedirectURL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToInvalidJwtDecodeNull;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToInvalidJwtDecodeNull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToDecodeError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToDecodeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToJwtDecodeError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToJwtDecodeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToHttpError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToHttpError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToSignInError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToSignInError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailed;)
+ (NSString * _Nonnull)kCashAppValidationFailed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToNilData;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToNilData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToDecodeError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToDecodeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToUnknownError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToUnknownError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToInvalidData;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToInvalidData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToHttpError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToHttpError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToValidationError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToValidationError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppStateError;)
+ (NSString * _Nonnull)kCashAppStateError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppIntegrationError;)
+ (NSString * _Nonnull)kCashAppIntegrationError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppNetworkError;)
+ (NSString * _Nonnull)kCashAppNetworkError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppApiError;)
+ (NSString * _Nonnull)kCashAppApiError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppUnexpectedError;)
+ (NSString * _Nonnull)kCashAppUnexpectedError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppUnknownTransactionState;)
+ (NSString * _Nonnull)kCashAppUnknownTransactionState SWIFT_WARN_UNUSED_RESULT;
@end


/// Represents the checkout data, shipping and billing address, cart items and more.
SWIFT_CLASS("_TtC11OPPWAMobile15OPPCheckoutData")
@interface OPPCheckoutData : NSObject
/// Checkout Data shopper’s shipping address.
@property (nonatomic, strong) OPPCDShipping * _Nullable shipping;
/// Checkout Data shopper’s billing address.
@property (nonatomic, strong) OPPCDBilling * _Nullable billing;
/// Checkout Data shopper’s cart object.
@property (nonatomic, strong) OPPCDCart * _Nullable cart;
/// Checkout Data shopper’s cart total amount.
@property (nonatomic, copy) NSString * _Nullable amount;
/// Checkout Data shopper’s currency.
@property (nonatomic, copy) NSString * _Nullable currency;
/// Checkout Data tax amount.
@property (nonatomic, copy) NSString * _Nullable taxAmount;
/// Checkout Data merchant transaction id.
@property (nonatomic, copy) NSString * _Nullable merchantTransactionID;
/// Checkout Data merchant object.
@property (nonatomic, strong) OPPCDMerchant * _Nullable merchant;
/// name Initialization
/// Creates checkout info object from the JSON that can be received from the Server by checkout ID.
/// param JSON A dictionary with parameters received from the Server.
/// param error An error if JSON is invalid.
/// return Returns an <code>OPPCheckoutInfo</code> object, or <code>nil</code> if JSON is invalid.
+ (OPPCheckoutData * _Nullable)checkoutData:(NSDictionary<NSString *, id> * _Nonnull)JSON error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPCheckoutDeviceAuth")
@interface OPPCheckoutDeviceAuth : NSObject
+ (void)cpd_requestDeviceAuthIfNeededFor:(NSString * _Nonnull)paymentBrand isToken:(BOOL)isToken paymentParams:(OPPPaymentParams * _Nonnull)paymentParams completion:(void (^ _Nonnull)(BOOL))completion;
+ (OPPSecurityPolicyMode)cpd_deviceAuthModeFor:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (OPPSecurityPolicyMode)cpd_deviceAuthModeForTokens SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPCheckoutLocalization")
@interface OPPCheckoutLocalization : NSObject
@property (nonatomic, copy) NSString * _Nullable language;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPCheckoutLocalization * _Nonnull sharedInstance;)
+ (OPPCheckoutLocalization * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)viewControllerTitlePaymentMethodSelection SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitlePaymentDetails SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitleProcessing SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitleAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)alertTitleCardScanningFailed SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTotalAmount SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelMBWayPushNotification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelMBWayAcceptPin SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTermsAndConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTermsAndConditionsAgreement SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelSwedish SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelFinnish SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelSTCPaySelectPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelCardScanHoldHere SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikTermsAndConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikRegulations SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikTncUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)messagePleaseWait SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)processingLabelForBlik SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityLabelForBlik SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)deviceAuthReason SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitlePay SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitlePayAmount SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleRegister SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleCancel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleBack SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleDone SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleOK SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCardHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCreditCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCVV SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelMobilePhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelBankAccountHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelIBAN SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelIBANOrAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelBICOrBankCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelSelectCountry SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelSelectBank SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelStorePaymentDetails SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelChooseCardType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelNumberOfInstallments SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelQRCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCountryCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelNationalIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelRoutingNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelAccountVerification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelOTP SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCardHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVV3Digits SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVV4Digits SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderBankAccountHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderIBAN SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderIBANOrAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderBICOrBankCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderMobilePhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCountryCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderNationalIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderRoutingNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderAccountVerification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderStreet1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderStreet2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCounty SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderPostcode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderOptional SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardHolderNameInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpiryDateInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpired SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVV3DigitsInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVV4DigitsInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBankAccountHolderInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorIBANInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorIBANOrAccountNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorRoutingNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBICOrBankCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorEmailInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorMobilePhoneInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCountryCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorNationalIdentifierInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountExpiryDateInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountExpired SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAddressInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorDateOfBirthInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBankCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupStored SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupOther SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupCards SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)titleForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityPayWith SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityCancelCheckout SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityScanCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityPayWithStoredPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderExpiryDateWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVVWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpiryDateInvalidWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVVInvalidWeb SWIFT_WARN_UNUSED_RESULT;
/// returns localized string for deprecated key if actual key is not used yet
- (NSString * _Nonnull)localizedStringForDeprecatedKey:(NSString * _Nonnull)deprecatedKey actualKey:(NSString * _Nonnull)actualKey defaultValue:(NSString * _Nullable)defaultValue SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile28OPPCheckoutPaymentValidation")
@interface OPPCheckoutPaymentValidation : NSObject
+ (void)isPaymentBrandValidWithPaymentBrand:(NSString * _Nonnull)paymentBrand completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
+ (void)isApplePayConfiguredWith:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
+ (void)isKlarnaConfiguredWith:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
+ (void)isKlarnaInlineConfiguredWithCompletionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCheckoutSettings;
@class OPPPaymentProvider;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile31OPPCheckoutSharedPaymentDetails")
@interface OPPCheckoutSharedPaymentDetails : NSObject
@property (nonatomic, strong) OPPCheckoutSettings * _Nullable checkoutSettings;
@property (nonatomic, copy) NSString * _Nullable checkoutID;
@property (nonatomic, strong) OPPCheckoutInfo * _Nullable checkoutInfo;
@property (nonatomic, copy) NSString * _Nullable paymentBrand;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable detectedBrandsPriority;
@property (nonatomic, strong) OPPPaymentProvider * _Nullable provider;
@property (nonatomic, copy) NSArray<OPPBrandInfo *> * _Nullable brandRules;
@property (nonatomic) BOOL isPaymentSchemeScreenEnabled;
@property (nonatomic) BOOL isCheckoutPresented;
@property (nonatomic) enum OPPAnalyticsDataIntegrationType integrationType;
@property (nonatomic, copy) void (^ _Nullable completeBlock)(OPPTransaction * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Nullable canceledBlock)(void);
@property (nonatomic, copy) void (^ _Nullable loadingBlock)(BOOL);
@property (nonatomic, strong) OPPApplePayDelegate * _Nonnull applePayDelegate;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable configuredPaymentBrands;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPCheckoutSharedPaymentDetails * _Nonnull sharedInstance;)
+ (OPPCheckoutSharedPaymentDetails * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Returns YES if payment method selection screen should be skipped, otherwise NO
@property (nonatomic, readonly) BOOL shouldEnablePaymentMethodSelectionScreen;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Call the complete block, setting the given transaction and error in the response.
- (void)callCompleteBlockWithTransaction:(OPPTransaction * _Nullable)transaction error:(NSError * _Nullable)error;
/// Call the canceled block.
- (void)callCanceledBlock;
/// Call the loading block.
- (void)callLoadingBlockInProgress:(BOOL)inProgress;
- (void)clear;
- (BOOL)isCopyAndPayOverrideFor:(NSString * _Nonnull)brand SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPSCheckoutTextField;
enum OPPExpandIcon : NSInteger;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPCheckoutTextFieldView")
@interface OPPCheckoutTextFieldView : UIView
@property (nonatomic, weak) IBOutlet OPPSCheckoutTextField * _Null_unspecified textField;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified leftTextField;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull helper;
@property (nonatomic, copy) NSString * _Nullable error;
@property (nonatomic, copy) NSString * _Nonnull accessibilityId;
@property (nonatomic, strong) UIView * _Nullable parentView;
@property (nonatomic) BOOL isEditing;
@property (nonatomic) enum OPPExpandIcon expandIcon;
@property (nonatomic) BOOL enabled;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)updateConstraints;
- (NSString * _Nullable)getText SWIFT_WARN_UNUSED_RESULT;
- (void)updateText:(NSString * _Nullable)text;
- (void)setLogoImageWith:(NSString * _Nonnull)paymentBrand handler:(void (^ _Nullable)(void))handler;
- (void)beginEditing;
- (void)endEditing;
- (void)clear;
- (void)enableLeftTextFieldWith:(NSString * _Nonnull)helper accessibiltyId:(NSString * _Nullable)accessibiltyId;
@end

@class OPPToken;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPCheckoutViewRouting")
@interface OPPCheckoutViewRouting : NSObject
- (nonnull instancetype)initWithMsdkUiType:(OPPMsdkUiType)msdkUiType checkoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
/// Returns details view controller for payment brand with token if needed, otherwise nil
- (UIViewController * _Nullable)detailsViewControllerWith:(NSString * _Nonnull)paymentBrand and:(OPPToken * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
/// Returns details view controller for payment brand with token and  transaction if needed, otherwise nil
- (UIViewController * _Nullable)detailsViewControllerWith:(NSString * _Nonnull)paymentBrand token:(OPPToken * _Nullable)token and:(OPPTransaction * _Nullable)transaction SWIFT_WARN_UNUSED_RESULT;
- (void)presentCopyAndPayViewControllerWithCurrentVC:(UIViewController * _Nonnull)currentVC transaction:(OPPTransaction * _Nonnull)transaction;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class OPPChinaUnionPayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPChinaUnionPayDetailsViewController")
@interface OPPChinaUnionPayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPChinaUnionPayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end




@interface OPPChinaUnionPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPChinaUnionPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end


@interface OPPChinaUnionPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile32OPPChinaUnionPayDetailsViewModel")
@interface OPPChinaUnionPayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPCopyAndPayViewModel;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile27OPPCopyAndPayViewController")
@interface OPPCopyAndPayViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPCopyAndPayViewModel * _Nullable)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPCopyAndPayViewController (SWIFT_EXTENSION(OPPWAMobile)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPCopyAndPayViewModel")
@interface OPPCopyAndPayViewModel : NSObject
@property (nonatomic) BOOL tokenEnabled;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile39OPPCustomPresentationControllerDelegate")
@interface OPPCustomPresentationControllerDelegate : UIPresentationController
- (void)adjustContentViewToHeight:(CGFloat)height;
- (void)containerViewWillLayoutSubviews;
@property (nonatomic, readonly) CGRect frameOfPresentedViewInContainerView;
- (void)presentationTransitionWillBegin;
- (void)dismissalTransitionWillBegin;
- (void)dismissalTransitionDidEnd:(BOOL)completed;
- (nonnull instancetype)initWithPresentedViewController:(UIViewController * _Nonnull)presentedViewController presentingViewController:(UIViewController * _Nullable)presentingViewController OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPCustomProgressView")
@interface OPPCustomProgressView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)hide;
- (void)show;
@end



/// A class that provides an interface to perform device authentication.
SWIFT_CLASS("_TtC11OPPWAMobile21OPPDeviceAuthProvider")
@interface OPPDeviceAuthProvider : NSObject
/// Checks if device authentication is enabled.
///
/// returns:
/// A boolean indicating whether device authentication is enabled.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isDeviceAuthEnabled;)
+ (BOOL)isDeviceAuthEnabled SWIFT_WARN_UNUSED_RESULT;
/// Performs device authentication with a localized reason.
/// \param localizedReason A string that provides a reason for the authentication request.
///
/// \param completion A closure that is called with the result of the authentication request.
///
+ (void)performDeviceAuthenticationWithLocalizedReason:(NSString * _Nonnull)localizedReason completion:(void (^ _Nonnull)(BOOL))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPDirectDebitDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPDirectDebitDetailsViewController")
@interface OPPDirectDebitDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPDirectDebitDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)updateViewConstraints;
- (void)cancelButtonAction;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPDirectDebitDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile30OPPDirectDebitDetailsViewModel")
@interface OPPDirectDebitDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand checkoutSettings:(OPPCheckoutSettings * _Nullable)checkoutSettings checkoutInfo:(OPPCheckoutInfo * _Nullable)checkoutInfo checkoutID:(NSString * _Nonnull)checkoutID;
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider token:(OPPToken * _Nonnull)token checkoutSettings:(OPPCheckoutSettings * _Nullable)checkoutSettings checkoutInfo:(OPPCheckoutInfo * _Nullable)checkoutInfo checkoutID:(NSString * _Nonnull)checkoutID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPEditAddressViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPEditAddressViewController")
@interface OPPEditAddressViewController : UIViewController
@property (nonatomic, weak) id <OPPEditAddressViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithViewModel:(OPPEditAddressViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPEditAddressViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPAddressSelectorViewControllerDelegate>
- (void)returnSelected:(NSString * _Nullable)value and:(NSInteger)tag;
@end




/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPEditAddressViewModel")
@interface OPPEditAddressViewModel : NSObject
- (nonnull instancetype)initWithAddress:(OPPBillingAddress * _Nonnull)address OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPExpandIcon, open) {
  OPPExpandIconExpand = 0,
  OPPExpandIconCollapse = 1,
  OPPExpandIconHidden = 2,
};

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPFeatureSwitch, open) {
  OPPFeatureSwitchComponentUI = 0,
  OPPFeatureSwitchThreeDSFallbackDisabled = 1,
  OPPFeatureSwitchSwiftImplementation = 2,
  OPPFeatureSwitchSwiftCheckoutProvider = 3,
  OPPFeatureSwitchThreeDSOOBSupported = 4,
};


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPFeatureSwitchChecker")
@interface OPPFeatureSwitchChecker : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPFeatureSwitchChecker * _Nonnull shared;)
+ (OPPFeatureSwitchChecker * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isActivatedFor:(enum OPPFeatureSwitch)featureSwitch SWIFT_WARN_UNUSED_RESULT;
- (void)enableWithFeatureSwitch:(enum OPPFeatureSwitch)featureSwitch;
- (void)disableWithFeatureSwitch:(enum OPPFeatureSwitch)featureSwitch;
@end

@class NSData;

/// Utilities to work with file system using C functions to avoid Checkmarx issues
SWIFT_CLASS("_TtC11OPPWAMobile11OPPFileUtil")
@interface OPPFileUtil : NSObject
/// Read NSData from specified path.
/// @param path Absolute path to the file.
/// @return Content of the file if path is valid, otherwise nil.
+ (NSData * _Nullable)readFromPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Write NSData to specified path.
/// @param data Data to be written to the file.
/// @param path Absolute path to the file.
+ (BOOL)writeWithData:(NSData * _Nonnull)data to:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Creates directory at specified path if it does not exist yet.
/// @param path Absolute path to the directory to be created.
+ (void)createDirectoryWithPath:(NSString * _Nonnull)path;
/// Removes file at specified path.
/// @param path Absolute path to the file.
+ (BOOL)removeFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Returns creation time if file is found, otherwise 0.
/// @param path Absolute path to the file.
+ (NSTimeInterval)fileCreationTimeAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPGiropayViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPGiropayDetailsViewController")
@interface OPPGiropayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPGiropayViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



@interface OPPGiropayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end


@interface OPPGiropayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPGiropayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile19OPPGiropayViewModel")
@interface OPPGiropayViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Utilities to load files from the framework bundle
SWIFT_CLASS("_TtC11OPPWAMobile9OPPIOUtil")
@interface OPPIOUtil : NSObject
/// Checks which file name to enter when trying to load a nib file from the .framework
/// @param file The file name
/// @return An NSString that can be used in initWithNibNamed:
+ (NSString * _Nullable)nibPathForResource:(NSString * _Nonnull)fileName SWIFT_WARN_UNUSED_RESULT;
/// Checks which filename to enter when trying to load a file from the .framework
/// @param file The file name
/// @param type The file type
/// @return An NSString that can be used for loading e.g. via [UIImage imageNamed:]
+ (NSString * _Nullable)shortPathForResource:(NSString * _Nonnull)fileName type:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
/// Checks which file name to enter when trying to load a file from the .framework
/// @param file The file name
/// @param type The file type
/// @return An NSString that can be used for loading e.g. via [NSDictionary dictionaryWithContentsOfFile:]
+ (NSString * _Nullable)pathForResource:(NSString * _Nonnull)fileName type:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPIkanoDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPIkanoDetailsViewController")
@interface OPPIkanoDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPIkanoDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

@class UIButton;

@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (void)configurePaymentButton:(UIButton * _Nonnull)paymentButton;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPIkanoDetailsViewModel")
@interface OPPIkanoDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class OPPIkanoPrivateLabelVADetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPIkanoPrivateLabelVADetailsViewController")
@interface OPPIkanoPrivateLabelVADetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPIkanoPrivateLabelVADetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end




@interface OPPIkanoPrivateLabelVADetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPIkanoPrivateLabelVADetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPIkanoPrivateLabelVADetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile38OPPIkanoPrivateLabelVADetailsViewModel")
@interface OPPIkanoPrivateLabelVADetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIImage;

/// Shared image cache.
/// Stores images in fast memory cache and disk cache for specific period of time.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPImageCache")
@interface OPPImageCache : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPImageCache * _Nonnull shared;)
+ (OPPImageCache * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSDictionary<NSString *, UIImage *> * _Nullable customImages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (UIImage * _Nullable)imageForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


/// Class for managing asynchronous downloads of brand logos from the Server.
SWIFT_CLASS("_TtC11OPPWAMobile14OPPImageLoader")
@interface OPPImageLoader : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPImageLoader * _Nonnull shared;)
+ (OPPImageLoader * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// imageURLs should be set before calling loading method.
/// @param URLs Map of logo URLs for payment brands.
- (void)addURLs:(NSDictionary<NSString *, NSURL *> * _Nonnull)URLs;
/// Checks if URL exists for specified payment brand.
/// @param paymentBrand Payment brand to check URL.
- (BOOL)hasURLForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
/// Loads logo for specified payment brand from the Server.
/// @param paymentBrand Payment brand to load the logo.
/// @param completion Completion block to be executed when download task returns result. Always called on main thread.
- (void)loadLogoForPaymentBrand:(NSString * _Nonnull)paymentBrand completion:(void (^ _Nonnull)(UIImage * _Nullable))completion;
@end

@class OPPInstantPayViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPInstantPayDetailsViewController")
@interface OPPInstantPayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPInstantPayViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)configureUI;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPInstantPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPInstantPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPInstantPayViewModel")
@interface OPPInstantPayViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPKlarnaDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPKlarnaDetailsViewController")
@interface OPPKlarnaDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPKlarnaDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)updateViewConstraints;
- (void)configureUI;
- (void)configurePaymentButton:(UIButton * _Nonnull)paymentButton;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPKlarnaDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
@end

@class UITableView;

@interface OPPKlarnaDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPKlarnaDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile25OPPKlarnaDetailsViewModel")
@interface OPPKlarnaDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPKlarnaInlineViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPKlarnaInlineViewController")
@interface OPPKlarnaInlineViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPKlarnaInlineViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class OPPKlarnaPaymentViewWrapper;

@interface OPPKlarnaInlineViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPKlarnaPaymentViewWrapperDelegate>
- (void)klarnaAuthorizedWithPaymentViewWrapper:(OPPKlarnaPaymentViewWrapper * _Nonnull)paymentView approved:(BOOL)approved authToken:(NSString * _Nullable)authToken finalizeRequired:(BOOL)finalizeRequired;
- (void)klarnaFailedInPaymentViewWrapper:(OPPKlarnaPaymentViewWrapper * _Nonnull)paymentView withError:(NSError * _Nonnull)error;
- (void)klarnaLoadedWithPaymentViewWrapper:(OPPKlarnaPaymentViewWrapper * _Nonnull)paymentView;
@end


@interface OPPKlarnaInlineViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPKlarnaInlineViewModel")
@interface OPPKlarnaInlineViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider transaction:(OPPTransaction * _Nonnull)transaction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class NSURLSession;
@class NSURLSessionTask;
@class NSHTTPURLResponse;
@class NSURLRequest;

@interface OPPKlarnaInlineViewModel (SWIFT_EXTENSION(OPPWAMobile)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
@end

@class UILabel;
@class UISwitch;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPKlarnaTableViewCell")
@interface OPPKlarnaTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified titleLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified linkTextView;
@property (nonatomic, weak) IBOutlet UISwitch * _Null_unspecified agreementSwitcher;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified termsTextView;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified termsImageView;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPLibValidator")
@interface OPPLibValidator : NSObject
+ (BOOL)isThreeDSFrameworksLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isFraudForceLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isKlarnaInlineLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAfterPayLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCashAppPayLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAffirmLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)validLoadedLibs SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPListDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPListDetailsViewController")
@interface OPPListDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPListDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPListDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPListDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPListDetailsViewModel")
@interface OPPListDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPLogLevel, open) {
  OPPLogLevelOff = 0,
  OPPLogLevelError = 100,
  OPPLogLevelWarning = 200,
  OPPLogLevelInfo = 300,
  OPPLogLevelDebug = 1000,
};


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile13OPPLogMessage")
@interface OPPLogMessage : NSObject <NSCoding>
@property (nonatomic) NSTimeInterval timestamp;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum OPPLogLevel logLevel;
- (nullable instancetype)initWithMessage:(NSString * _Nonnull)message logLevel:(enum OPPLogLevel)logLevel checkoutID:(NSString * _Nonnull)checkoutID;
+ (nullable instancetype)logMessageWithMessage:(NSString * _Nonnull)message logLevel:(enum OPPLogLevel)logLevel checkoutID:(NSString * _Nonnull)checkoutID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEmpty SWIFT_WARN_UNUSED_RESULT;
- (enum OPPLogLevel)getLogLevel SWIFT_WARN_UNUSED_RESULT;
- (NSTimeInterval)getTimeStamp SWIFT_WARN_UNUSED_RESULT;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPLoggerServiceProtocol;
@class NSURLResponse;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile9OPPLogger")
@interface OPPLogger : NSObject
+ (OPPLogger * _Nullable)sharedInstance:(id <OPPLoggerServiceProtocol> _Nullable)loggerService SWIFT_WARN_UNUSED_RESULT;
- (void)updateLogLevelWithString:(NSString * _Nullable)logLevelString;
- (void)logWithInfo:(NSString * _Nonnull)info properties:(NSDictionary<NSString *, id> * _Nullable)properties checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithWarning:(NSString * _Nonnull)warning checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithError:(NSError * _Nullable)error checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithDebug:(NSString * _Nonnull)debug properties:(NSDictionary<NSString *, id> * _Nullable)properties checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithRequest:(NSURLRequest * _Nonnull)request checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithResponse:(NSURLResponse * _Nonnull)response checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logConfiguredWithPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logUnconfiguredWithPaymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logCheckoutStartedWithCheckoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logReplacingWithOldCheckoutID:(NSString * _Nonnull)oldCheckoutID with:(NSString * _Nonnull)newCheckoutID mode:(OPPProviderMode)mode;
- (void)sendLogs;
- (void)sendOldLogs;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPLogger (SWIFT_EXTENSION(OPPWAMobile))
- (NSString * _Nonnull)lgf_integrationTypeString SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)lgf_checkoutSettingsDictionaryWithSettings:(OPPCheckoutSettings * _Nonnull)settings SWIFT_WARN_UNUSED_RESULT;
@end



/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile24OPPLoggerServiceProtocol_")
@protocol OPPLoggerServiceProtocol
- (void)sendLogWithMessages:(NSArray<OPPLogMessage *> * _Nonnull)messages checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode :(void (^ _Nonnull)(BOOL))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPLoggerService")
@interface OPPLoggerService : NSObject <OPPLoggerServiceProtocol>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)sendLogWithMessages:(NSArray<OPPLogMessage *> * _Nonnull)messages checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode :(void (^ _Nonnull)(BOOL))completionHandler;
@end



/// Utilities to get logos hard-coded in SDK
SWIFT_CLASS("_TtC11OPPWAMobile11OPPLogoUtil")
@interface OPPLogoUtil : NSObject
/// Returns the logo for the specified payment brand.
/// \param paymentBrand The payment brand to search the logo.
///
///
/// returns:
/// A logo image if found, otherwise nil.
+ (UIImage * _Nullable)logoForPaymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
/// Returns the logo for the specified payment brand (or text representation if image not found).
/// \param paymentBrand The payment brand to search the logo.
///
/// \param viewSize View size to fit brand name as text into it.
///
///
/// returns:
/// A logo image if found, otherwise an image with payment brand name as text.
+ (UIImage * _Nonnull)logoForPaymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand viewSize:(CGSize)viewSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPMBWayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPMBWAYDetailsViewController")
@interface OPPMBWAYDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPMBWayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPMBWAYDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)expiryDateTextField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPMBWayConfig;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPMBWayDetailsViewModel")
@interface OPPMBWayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider mbwayConfig:(OPPMBWayConfig * _Nullable)mbwayConfig checkoutID:(NSString * _Nonnull)checkoutID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile20OPPNetworkExecutable_")
@protocol OPPNetworkExecutable
- (void)executeWithRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC11OPPWAMobile18OPPNetworkExecutor")
@interface OPPNetworkExecutor : NSObject <OPPNetworkExecutable>
- (void)executeWithRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexSet;
@class OPPNetworkResponse;

SWIFT_PROTOCOL("_TtP11OPPWAMobile30OPPNetworkResponseSerializable_")
@protocol OPPNetworkResponseSerializable
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11OPPWAMobile32OPPNetworkHTMLResponseSerializer")
@interface OPPNetworkHTMLResponseSerializer : NSObject <OPPNetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile33OPPNetworkImageResponseSerializer")
@interface OPPNetworkImageResponseSerializer : NSObject <OPPNetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum OPPNetworkRequestContentType : NSInteger;
enum OPPNetworkServiceMethod : NSInteger;

SWIFT_PROTOCOL("_TtP11OPPWAMobile29OPPNetworkRequestSerializable_")
@protocol OPPNetworkRequestSerializable
@property (nonatomic, readonly) enum OPPNetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11OPPWAMobile31OPPNetworkJSONRequestSerializer")
@interface OPPNetworkJSONRequestSerializer : NSObject <OPPNetworkRequestSerializable>
@property (nonatomic, readonly) enum OPPNetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile32OPPNetworkJSONResponseSerializer")
@interface OPPNetworkJSONResponseSerializer : NSObject <OPPNetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile16OPPNetworkLogger_")
@protocol OPPNetworkLogger
- (void)logRequest:(NSURLRequest * _Nullable)request;
- (void)logResponse:(NSURLResponse * _Nullable)response;
@end


SWIFT_CLASS("_TtC11OPPWAMobile17OPPNetworkManager")
@interface OPPNetworkManager : NSObject
- (nonnull instancetype)initWithLogger:(id <OPPNetworkLogger> _Nullable)logger requestSerializer:(id <OPPNetworkRequestSerializable> _Nonnull)requestSerializer responseSerializer:(id <OPPNetworkResponseSerializable> _Nonnull)responseSerializer networkExecutor:(id <OPPNetworkExecutable> _Nonnull)networkExecutor OBJC_DESIGNATED_INITIALIZER;
- (void)executeWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, OPPNetworkRequestContentType, open) {
  OPPNetworkRequestContentTypeJson = 0,
  OPPNetworkRequestContentTypeUrl = 1,
};



SWIFT_CLASS("_TtC11OPPWAMobile27OPPNetworkRequestSerializer")
@interface OPPNetworkRequestSerializer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) id <OPPNetworkRequestSerializable> _Nonnull default_;)
+ (id <OPPNetworkRequestSerializable> _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (id <OPPNetworkRequestSerializable> _Nonnull)serializerWithContentType:(enum OPPNetworkRequestContentType)contentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile18OPPNetworkResponse")
@interface OPPNetworkResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, OPPNetworkResponseContentType, open) {
  OPPNetworkResponseContentTypeJson = 0,
  OPPNetworkResponseContentTypeImage = 1,
  OPPNetworkResponseContentTypeHtml = 2,
};



SWIFT_CLASS("_TtC11OPPWAMobile28OPPNetworkResponseSerializer")
@interface OPPNetworkResponseSerializer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) id <OPPNetworkResponseSerializable> _Nonnull default_;)
+ (id <OPPNetworkResponseSerializable> _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (id <OPPNetworkResponseSerializable> _Nonnull)serializerWithContentType:(enum OPPNetworkResponseContentType)contentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, OPPNetworkServiceMethod, open) {
  OPPNetworkServiceMethodGet = 0,
  OPPNetworkServiceMethodPost = 1,
};


SWIFT_CLASS("_TtC11OPPWAMobile30OPPNetworkURLRequestSerializer")
@interface OPPNetworkURLRequestSerializer : NSObject <OPPNetworkRequestSerializable>
@property (nonatomic, readonly) enum OPPNetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PKPaymentButton;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPPKPaymentButtonTableViewCell")
@interface OPPPKPaymentButtonTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet PKPaymentButton * _Null_unspecified pkPaymentButton;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPPKPaymentButtonTableViewCellHeight;)
+ (CGFloat)OPPPKPaymentButtonTableViewCellHeight SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentFormHeaderView")
@interface OPPPaymentFormHeaderView : UIView
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified logoView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified formTitleLabel;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified logoImageView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPPaymentParamBuilder")
@interface OPPPaymentParamBuilder : NSObject
+ (OPPPaymentParams * _Nullable)createPaymentParamsWithoutUI:(NSString * _Nonnull)paymentBrandString token:(OPPToken * _Nullable)token error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (void)updateWithPaymentParams:(OPPPaymentParams * _Nonnull)paymentParams with:(NSString * _Nonnull)checkoutId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class OPPPaymentProcessingViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentProcessingViewController")
@interface OPPPaymentProcessingViewController : OPPRootViewController <SFSafariViewControllerDelegate>
- (nullable instancetype)initWithViewModel:(OPPPaymentProcessingViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)configureUI;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile29OPPPaymentProcessingViewModel")
@interface OPPPaymentProcessingViewModel : NSObject
- (nonnull instancetype)initWithPaymentParams:(OPPPaymentParams * _Nonnull)paymentParams checkoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum OPPPaymentSchemeSectionType : NSInteger;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile27OPPPaymentSchemeSectionInfo")
@interface OPPPaymentSchemeSectionInfo : NSObject
@property (nonatomic, readonly) enum OPPPaymentSchemeSectionType sectionType;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSArray<OPPToken *> * _Nullable tokens;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable paymentBrands;
@property (nonatomic) CGFloat sectionHeight;
- (nonnull instancetype)initWithType:(enum OPPPaymentSchemeSectionType)type title:(NSString * _Nullable)title OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPPaymentSchemeSectionType, open) {
  OPPPaymentSchemeSectionTypeTokens = 0,
  OPPPaymentSchemeSectionTypeCards = 1,
  OPPPaymentSchemeSectionTypeApplePay = 2,
  OPPPaymentSchemeSectionTypeOther = 3,
};


/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentSchemeTableViewCell")
@interface OPPPaymentSchemeTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified paymentSchemeLogoImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified paymentSchemeTitleLabel;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified logoView;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPPaymentSchemeViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentSchemeViewController")
@interface OPPPaymentSchemeViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPPaymentSchemeViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (CGFloat)preferredPresentationHeight SWIFT_WARN_UNUSED_RESULT;
- (void)configureUI;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPPaymentSchemeViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)navigationController:(UINavigationController * _Nonnull)navigationController didShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
@end


@interface OPPPaymentSchemeViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPPaymentSchemeViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile25OPPPaymentSchemeViewModel")
@interface OPPPaymentSchemeViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile27OPPPaymentSelectionDelegate_")
@protocol OPPPaymentSelectionDelegate
- (void)paymentSelectionControllerDidSelectPaymentBrand:(NSString * _Nonnull)brand completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
- (void)paymentSelectionControllerDidSelectToken:(OPPToken * _Nonnull)token completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
- (void)paymentSelectionControllerDidCancel;
- (void)paymentSelectionControllerCardTokens:(NSArray<OPPToken *> * _Nonnull)cardTokens;
- (void)paymentSelectionControllerPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands;
@end

@protocol OPPPaymentSchemeSelectionActionDelegate;

SWIFT_CLASS_NAMED("OPPPaymentSelectionViewController")
@interface OPPPaymentSelectionViewController : UIViewController <OPPPaymentSelectionDataSource, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) id <OPPPaymentSchemeSelectionActionDelegate> _Nullable paymentSchemeActionDelegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)paymentSelectionControllerCardTokens:(NSArray<OPPToken *> * _Nonnull)cardTokens;
- (void)paymentSelectionControllerPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPPaymentSelectionViewController (SWIFT_EXTENSION(OPPWAMobile)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPPaymentSelectionViewController (SWIFT_EXTENSION(OPPWAMobile)) <UINavigationControllerDelegate>
- (void)navigationController:(UINavigationController * _Nonnull)navigationController didShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (UIInterfaceOrientationMask)navigationControllerSupportedInterfaceOrientations:(UINavigationController * _Nonnull)navigationController SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPRatePayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPRatePayDetailsViewController")
@interface OPPRatePayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPRatePayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPRatePayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPRatePayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile26OPPRatePayDetailsViewModel")
@interface OPPRatePayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPSCardDetailsViewModel")
@interface OPPSCardDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand token:(OPPToken * _Nullable)token OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







/// :nodoc:
SWIFT_CLASS_NAMED("OPPSCheckoutTextField")
@interface OPPSCheckoutTextField : UITextField
@property (nonatomic) BOOL isDefaultContextMenu;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPSTCPayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPSTCPayDetailsViewController")
@interface OPPSTCPayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPSTCPayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPSTCPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPSTCPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile25OPPSTCPayDetailsViewModel")
@interface OPPSTCPayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPSThreeDSManagerDelegate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile18OPPSThreeDSManager")
@interface OPPSThreeDSManager : NSObject
@property (nonatomic, weak) id <OPPSThreeDSManagerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithMode:(OPPProviderMode)mode OBJC_DESIGNATED_INITIALIZER;
- (void)proceedWithAppFlowWithTransaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nullable, NSError * _Nullable))completionHandler;
- (void)proceedWebFlowWith:(OPPTransaction * _Nullable)transaction :(void (^ _Nonnull)(OPPTransaction * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface OPPSThreeDSManager (SWIFT_EXTENSION(OPPWAMobile)) <SecurityEventListener>
- (void)alarm:(enum Severity)severity :(enum SecurityEvent)event;
@end


@interface OPPSThreeDSManager (SWIFT_EXTENSION(OPPWAMobile)) <ClientEventListener>
- (void)onDataPacketIn:(NSData * _Nonnull)dataPacket;
- (void)onDataPacketOut:(NSData * _Nonnull)dataPacket;
- (void)onError:(int32_t)errorCode :(NSString * _Nonnull)description;
- (void)onLog:(int32_t)logLevel :(NSString * _Nonnull)message :(NSString * _Nonnull)logType;
- (void)onSSLServerAuthentication:(NSData * _Nonnull)certEncoded :(NSString * _Nonnull)certSubject :(NSString * _Nonnull)certIssuer :(NSString * _Nonnull)status :(int32_t * _Nonnull)accept;
- (void)onSSLStatus:(NSString * _Nonnull)message;
@end

@class CompletionEvent;
@class ProtocolErrorEvent;
@class RuntimeErrorEvent;

@interface OPPSThreeDSManager (SWIFT_EXTENSION(OPPWAMobile)) <ChallengeStatusReceiver>
- (void)completed:(CompletionEvent * _Nonnull)completionEvent;
- (void)cancelled;
- (void)timedout;
- (void)protocolError:(ProtocolErrorEvent * _Nonnull)protocolErrorEvent;
- (void)runtimeError:(RuntimeErrorEvent * _Nonnull)runtimeErrorEvent;
@end


@class OPPThreeDSConfig;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile26OPPSThreeDSManagerDelegate_")
@protocol OPPSThreeDSManagerDelegate
- (void)onThreeDSChallengeRequiredWith:(void (^ _Nonnull)(UINavigationController * _Nullable))completion;
- (void)onThreeDSConfigRequiredWith:(void (^ _Nonnull)(OPPThreeDSConfig * _Nullable))completion;
- (void)sendThreeDS2AuthParamsWithParams:(NSString * _Nonnull)params transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPStorePaymentDetailsView")
@interface OPPStorePaymentDetailsView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified label;
@property (nonatomic, weak) IBOutlet UISwitch * _Null_unspecified switchControl;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)layoutSubviews;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPTextFieldContentType, open) {
  OPPTextFieldContentTypeCreditCardName = 0,
  OPPTextFieldContentTypeCreditCardExpiration = 1,
  OPPTextFieldContentTypeCreditCardSecurityCode = 2,
  OPPTextFieldContentTypeTelephoneNumber = 3,
  OPPTextFieldContentTypeName = 4,
  OPPTextFieldContentTypeBirthdate = 5,
};

@class UiCustomization;

/// Class that contains all possible configurations to be applied at <code>OPPThreeDSService</code> initialization phase.
SWIFT_CLASS("_TtC11OPPWAMobile16OPPThreeDSConfig")
@interface OPPThreeDSConfig : NSObject
/// Specific types of challenge interfaces.
/// They may vary for native way, e.g. present OTP or single select screen.
/// By default all UI types are supported, it’s strongly recommended by EMVCo.
@property (nonatomic) OPPThreeDSChallengeUiType challengeUiTypes;
/// The maximum amount of time (in minutes) for all exchanges for the 3-D Secure authentication.
/// Default value is 5 minutes.
@property (nonatomic) NSInteger sdkMaxTimeout;
/// The custom parameter for the /n software <code>Client</code> component.
/// See <a href="http://cdn.nsoftware.com/help/TS2/android/ClientConfig.htm" target="_blank"> /n software ClientConfig guide</a> for the keys.
/// Sample value <code>["AcceptAnyACSCert": "true"]</code>
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull clientConfigParams;
/// The expected bundle identifier for the application.
@property (nonatomic, copy) NSString * _Nonnull appBundleID;
/// The string that represents the locale for the app’s user interface.
@property (nonatomic, copy) NSString * _Nullable locale;
/// The list of device parameters that should NOT be collected for the device.
/// By default, the SDK will pull as many device parameters as it can.
/// Refer to the “EMV® 3-D Secure SDK—Device Information” guide to see the full list of possible device parameters and appropriate constants to be used.
/// Sample values would be <code>["A001", "A002"]</code>.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable deviceParameterBlacklist;
/// UI configuration information that is used to specify the UI layout and theme of the challenge screens, for example, font style and font size.
@property (nonatomic, strong) UiCustomization * _Nonnull uiCustomization;
/// Merchant app URL used by Authentication app to call the Merchant app after OOB authentication has occurred.
@property (nonatomic, copy) NSString * _Nullable threeDSRequestorAppURL;
/// Sets whether browser data is required or not.
/// If <code>isBrowserDataRequired</code> is set to <code>true</code>, the browser details will be collected and sent in payment request
/// By default it is set as false and browser details will not be collected.
/// for example - Browser height, language, Screen height and width, Timezone etc.
@property (nonatomic) BOOL isBrowserDataRequired;
/// Creates an object representing configuration information to be applied at <code>OPPThreeDSService</code>.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSSet<NSString *> * _Nonnull)getClientConfig SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary<NSString *, NSString *> * _Nonnull)getUngroupedConfigParams SWIFT_WARN_UNUSED_RESULT;
@end


/// Class to represent all information needed to communicate securely with Directory Server (DS) and Access Control Server (ACS)
SWIFT_CLASS("_TtC11OPPWAMobile22OPPThreeDSSchemeConfig")
@interface OPPThreeDSSchemeConfig : NSObject
/// Directory Server ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsRefId;
/// Public certificate provided by the DS to encrypt device data.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsEncryptCert;
/// CA public certificate (root) of the DS-CA.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsCaRootCert;
/// Creates an object representing information to connect to DS and ACS.
/// \param dsRefId Directory Server ID.
///
/// \param dsEncryptCert Public certificate provided by the DS to encrypt device data.
///
/// \param dsCaRootCert CA public certificate (root) of the DS-CA.
///
///
/// returns:
/// Returns an object representing information to connect to DS and ACS.
- (nonnull instancetype)initWithDsRefId:(NSString * _Nonnull)dsRefId dsEncryptCert:(NSString * _Nonnull)dsEncryptCert dsCaRootCert:(NSString * _Nonnull)dsCaRootCert OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPTokenCollectionViewCell")
@interface OPPTokenCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified paymentBrandLogoView;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified paymentBrandImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified paymentBrandDetailLabel;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPTokensSectionDelegate")
@interface OPPTokensSectionDelegate : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPTokenCollectionViewCellReuseId;)
+ (NSString * _Nonnull)OPPTokenCollectionViewCellReuseId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTokens:(NSArray<OPPToken *> * _Nonnull)tokens didSelect:(void (^ _Nonnull)(OPPToken * _Nonnull))didSelect OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPTokensSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface OPPTokensSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPTokensTableViewCell")
@interface OPPTokensTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPTotalAmountView")
@interface OPPTotalAmountView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified headerLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified amountLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile9OPPUIUtil")
@interface OPPUIUtil : NSObject
/// Finds and returns the top view controller on the screen
/// @return A top view controller on the screen
+ (UIViewController * _Nullable)findTopViewController SWIFT_WARN_UNUSED_RESULT;
/// Returns current interface orientation
/// @return current interface orientation
+ (UIInterfaceOrientation)interfaceOrientation SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPortraitOrientation SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;
@class NSDate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile7OPPUtil")
@interface OPPUtil : NSObject
/// Returns formatted amount depending on the currency
+ (NSString * _Nonnull)formattedAmountWithAmount:(NSNumber * _Nonnull)amount currencyCode:(NSString * _Nonnull)currencyCode SWIFT_WARN_UNUSED_RESULT;
/// Returns formatted numeric digits
+ (NSString * _Nullable)formattedNumericDigitsFor:(NSString * _Nonnull)digits SWIFT_WARN_UNUSED_RESULT;
/// Returns string with Whitespaces regarding pattern
+ (NSString * _Nonnull)addWhitespacesTo:(NSString * _Nonnull)text pattern:(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the character is from 0 to 9
+ (BOOL)isNumericDigit:(unichar)digit SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the string consists only of numeric digits
+ (BOOL)isCardNumberFormattingAllowedWithCardNumber:(NSString * _Nonnull)cardNumber SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the string matches the date with format
+ (BOOL)isDateValid:(NSString * _Nonnull)dateString withFormat:(NSString * _Nonnull)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// Returns month from expiration date in ‘MM’ format
+ (NSString * _Nullable)cardExpirationMonthFrom:(NSString * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
/// Returns year from expiration date in ‘YYYY’ format
+ (NSString * _Nullable)cardExpirationYearFrom:(NSString * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
/// Return date from the string in the format
+ (NSDate * _Nullable)dateFrom:(NSString * _Nonnull)dateStr withFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// Return string from the date in the format
+ (NSString * _Nullable)stringFrom:(NSDate * _Nullable)date withFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPBinInfo;
@class Warning;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile22OPPWAProcessorProtocol_")
@protocol OPPWAProcessorProtocol
@property (nonatomic, strong) OPPSThreeDSManager * _Nullable threeDSManager;
/// On sending a transaction, it is performed asynchronously using an NSURLSession to communicate with the Server. Depending on the endpoint the transaction will be submitted or registered only without making the payment.
/// @param transaction The transaction to be sent.
/// @param endpoint The endpoint which will be used for processing transaction. The endpoint must start with a “/”.
/// @param completionHandler A block executed when the transaction is sent.
- (void)sendWithTransaction:(OPPTransaction * _Nonnull)transaction toEndPoint:(NSString * _Nonnull)toEndPoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
/// Requests checkout details such as amount, currency and tokens from the Server by checkout ID.
/// Request is performed asynchronously using an NSURLConnection.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block will be invoked once the response in received. On success, you will receive an instance of <code>OPPCheckoutInfo</code>; on failure, an error.
- (void)requestCheckoutInfoWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
/// Requests logo URLs for specified payment brands.
/// Request is performed asynchronously using an NSURLSession.
/// @param paymentBrands The list of payment brands to get logos from the Server.
/// @param completionHandler The completion block will be invoked once the response in received. On success, you will receive a dictionary with URLs in format <paymentBrand: URL>; on failure, an error.
- (void)requestLogoURLsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
/// On sending a 3-D Secure 2 authentication params to the Server.
/// @param authParams The 3-D Secure 2 authentication params to be sent.
/// @param transaction The transaction to be used to get <code>OPPThreeDS2Info</code>.
/// @param completionHandler A block executed when the transaction is sent.
- (void)sendThreeDS2WithAuthParams:(NSString * _Nonnull)authParams transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
/// Requests brand validations from the Server by checkout ID.
/// Request is performed asynchronously using an NSURLConnection.
/// @param paymentBrands The list of payment brands to be validated.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block will be invoked once the response in received.
- (void)requestValidationsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
/// Request <code>OPPBinInfo</code> for provided card bin
/// @param checkoutID The checkout ID of a transaction.
/// @param bin First 6 or more digits of the card number.
/// @param completionHandler The completion block will be invoked once the response in received.
- (void)requestBinInfoWithCheckoutID:(NSString * _Nonnull)checkoutID bin:(NSString * _Nonnull)bin :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
/// Requests the list of IDEAL banks from the Server by checkout ID.
/// Request is performed asynchronously using an NSURLConnection.
/// This method is deprecated.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block will be invoked once the response in received.
- (void)requestIdealBanksWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler SWIFT_DEPRECATED;
/// Requests a Apple’s  recurring payments tokenId.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block which will be invoked once the response is received. On success, you will receive a tokenId, and on failure an error is received.
- (void)requestApplesTokenIdWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
/// Requests a Checkout  payment data
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block which will be invoked once the response is received. On success, you will receive an OPPCheckoutData ojbect with payment data, and on failure an error is received.
- (void)requestCheckoutDataWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
/// The ipworks3ds SDK performs security checks in order to provide a  list of <code>Warning</code> objects. These can be checked by the app to determine whether or not to proceed with the checkout process.
/// @param completionHandler The completion block will be invoked once the performing of security checks is done . On success, you will receive an instance of <code>Warning</code>; on failure, an error.
- (void)securityWarningsWithCompletionHandler:(void (^ _Nonnull)(NSArray<Warning *> * _Nullable, NSError * _Nullable))completionHandler;
@end


/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile29OPPWAProcessorServiceProtocol_")
@protocol OPPWAProcessorServiceProtocol
- (void)sendTransactionFor:(OPPTransaction * _Nonnull)transaction endpoint:(NSString * _Nonnull)endpoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)checkoutInfoFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)logoUrlsFor:(NSArray<NSString *> * _Nonnull)brands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2For:(OPPTransaction * _Nonnull)transaction with:(NSString * _Nonnull)authParams :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)validationFor:(NSArray<NSString *> * _Nonnull)brands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)binInfoFor:(NSString * _Nonnull)bin checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)idealBanksFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)appleTokenFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)checkoutDataFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
@end

@class OPPWAResponseParser;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPWAProcessorService")
@interface OPPWAProcessorService : NSObject <OPPWAProcessorServiceProtocol>
- (nonnull instancetype)initWithMode:(OPPProviderMode)mode parser:(OPPWAResponseParser * _Nonnull)parser OBJC_DESIGNATED_INITIALIZER;
- (void)sendTransactionFor:(OPPTransaction * _Nonnull)transaction endpoint:(NSString * _Nonnull)endpoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)checkoutInfoFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)logoUrlsFor:(NSArray<NSString *> * _Nonnull)brands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2For:(OPPTransaction * _Nonnull)transaction with:(NSString * _Nonnull)authParams :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)validationFor:(NSArray<NSString *> * _Nonnull)brands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)binInfoFor:(NSString * _Nonnull)bin checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)idealBanksFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)appleTokenFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)checkoutDataFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile19OPPWAResponseParser")
@interface OPPWAResponseParser : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPWASPaymentProvider")
@interface OPPWASPaymentProvider : OPPPaymentProvider
- (nonnull instancetype)initWithMode:(OPPProviderMode)mode processor:(id <OPPWAProcessorProtocol> _Nullable)processor OBJC_DESIGNATED_INITIALIZER;
- (void)sendTransaction:(OPPTransaction * _Nonnull)transaction toEndpoint:(NSString * _Nonnull)endpoint completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)submitTransaction:(OPPTransaction * _Nonnull)transaction completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)registerTransaction:(OPPTransaction * _Nonnull)transaction completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestCheckoutInfoWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestLogoURLsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands completionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestBinInfoWithCheckoutID:(NSString * _Nonnull)checkoutID bin:(NSString * _Nonnull)bin completionHandler:(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestIdealBanksWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(NSArray<NSDictionary *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)securityWarningsWithCompletionHandler:(void (^ _Nonnull)(NSArray<Warning *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2AuthParams:(NSString * _Nonnull)authParams transaction:(OPPTransaction * _Nonnull)transaction completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestApplesTokenIdWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestValidationsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestCheckoutDataWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPWASPaymentProvider (SWIFT_EXTENSION(OPPWAMobile)) <OPPSThreeDSManagerDelegate>
- (void)onThreeDSChallengeRequiredWith:(void (^ _Nonnull)(UINavigationController * _Nullable))completion;
- (void)onThreeDSConfigRequiredWith:(void (^ _Nonnull)(OPPThreeDSConfig * _Nullable))completion;
- (void)sendThreeDS2AuthParamsWithParams:(NSString * _Nonnull)params transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPWASProcessor")
@interface OPPWASProcessor : NSObject <OPPWAProcessorProtocol>
@property (nonatomic, strong) OPPSThreeDSManager * _Nullable threeDSManager;
- (nonnull instancetype)initWithThreeDSManager:(OPPSThreeDSManager * _Nullable)threeDSManager mode:(OPPProviderMode)mode service:(id <OPPWAProcessorServiceProtocol> _Nonnull)service OBJC_DESIGNATED_INITIALIZER;
- (void)sendWithTransaction:(OPPTransaction * _Nonnull)transaction toEndPoint:(NSString * _Nonnull)toEndPoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestCheckoutInfoWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestLogoURLsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2WithAuthParams:(NSString * _Nonnull)authParams transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestValidationsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestBinInfoWithCheckoutID:(NSString * _Nonnull)checkoutID bin:(NSString * _Nonnull)bin :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestIdealBanksWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestApplesTokenIdWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestCheckoutDataWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
- (void)securityWarningsWithCompletionHandler:(void (^ _Nonnull)(NSArray<Warning *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIColor;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPWebViewUtils")
@interface OPPWebViewUtils : NSObject
+ (BOOL)isFinalAsyncReachedWith:(NSString * _Nullable)redirectString shopperResultUrl:(NSString * _Nullable)shopperResultUrl SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)redirectUrlPresentWithRedirectString:(NSString * _Nullable)redirectString contain:(NSString * _Nullable)shopperResultUrl SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)redirectUrlPresentWithRedirectString:(NSString * _Nullable)redirectString conformsTo:(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)colorToString:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)fileContentWithName:(NSString * _Nonnull)filename error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)boolToString:(BOOL)boolValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface PKPaymentRequest (SWIFT_EXTENSION(OPPWAMobile))
- (BOOL)updatePaymentRequestFor:(OPPProviderMode)mode tokenId:(NSString * _Nonnull)tokenId SWIFT_WARN_UNUSED_RESULT;
@end






@interface UIImageView (SWIFT_EXTENSION(OPPWAMobile))
/// Downloads logo asynchronously for specified payment brand.
/// Important: use loadImageForPaymentBrand:checkAccessibilityId: to load images in reusable elements like UITableViewCell.
/// @param paymentBrand Payment brand to load logo.
- (void)loadImageForPaymentBrand:(NSString * _Nonnull)paymentBrand;
/// Downloads logo asynchronously for specified payment brand.
/// Method updates an image only if accessibilityId was not changed while loading image.
/// This check is ignored if accessibilityId is nil.
/// @param paymentBrand Payment brand to load logo.
/// @param accessibilityId Accessibility identifier that will be set to the image view, and validated after asynchronous image loading.
- (void)loadImageForPaymentBrand:(NSString * _Nonnull)paymentBrand accessibilityId:(NSString * _Nullable)accessibilityId;
@end

@class UIFont;
@class OPPCheckoutTheme;

@interface UILabel (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureWithTitle:(NSString * _Nonnull)title font:(UIFont * _Nonnull)font isHighLighted:(BOOL)isHighLighted theme:(OPPCheckoutTheme * _Nonnull)theme;
@end


@interface UITextField (SWIFT_EXTENSION(OPPWAMobile))
- (void)updateOPPTextContentType:(enum OPPTextFieldContentType)contentType;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef OPPWAMOBILE_SWIFT_H
#define OPPWAMOBILE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import PassKit;
@import SafariServices;
@import UIKit;
@import Vision;
@import WebKit;
@import ipworks3ds_sdk;
#endif

#import <OPPWAMobile/OPPWAMobile.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OPPWAMobile",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class OPPTransaction;

@interface NSError (SWIFT_EXTENSION(OPPWAMobile))
+ (NSError * _Nonnull)afterPayFamilyErrorWithTransaction:(OPPTransaction * _Nonnull)transaction SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPAddressCodes")
@interface OPPAddressCodes : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCountryCodeUSA;)
+ (NSString * _Nonnull)kCountryCodeUSA SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCountryCodeCanada;)
+ (NSString * _Nonnull)kCountryCodeCanada SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getCountries SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getUsStates SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getCaStates SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getCountryNameWithCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getCountryCodeWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getStateNameWithCode:(NSString * _Nonnull)stateCode countryCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getStateCodeWithName:(NSString * _Nonnull)state countryCode:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCountryCodeIsValid:(NSString * _Nonnull)countryCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPAddressField, open) {
  OPPAddressFieldStreet1 = 0,
  OPPAddressFieldStreet2 = 1,
  OPPAddressFieldCity = 2,
  OPPAddressFieldState = 3,
  OPPAddressFieldCountry = 4,
  OPPAddressFieldPostCode = 5,
};

@protocol OPPAddressSelectorViewControllerDelegate;
@class OPPAddressSelectorViewModel;
@class NSCoder;
@class NSBundle;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPAddressSelectorViewController")
@interface OPPAddressSelectorViewController : UIViewController
@property (nonatomic, weak) id <OPPAddressSelectorViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithViewModel:(OPPAddressSelectorViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile40OPPAddressSelectorViewControllerDelegate_")
@protocol OPPAddressSelectorViewControllerDelegate <NSObject>
- (void)returnSelected:(NSString * _Nullable)value and:(NSInteger)tag;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile27OPPAddressSelectorViewModel")
@interface OPPAddressSelectorViewModel : NSObject
- (nonnull instancetype)initWithArray:(NSArray<NSString *> * _Nonnull)array addressField:(enum OPPAddressField)addressField backButtonTitle:(NSString * _Nullable)backButtonTitle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPAddressViewDelegate;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPAddressView")
@interface OPPAddressView : UIView
@property (nonatomic, weak) id <OPPAddressViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)setStreet1Line:(NSString * _Nullable)street1Line;
- (void)setStreet2Line:(NSString * _Nullable)street2Line;
- (void)setCityStatePostCodeLine:(NSString * _Nullable)cityLine;
- (void)setCountryLine:(NSString * _Nullable)countyLine;
- (void)switchToEnabledState:(BOOL)enabled;
- (BOOL)isAddressInEnabledState SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile22OPPAddressViewDelegate_")
@protocol OPPAddressViewDelegate
- (void)addressViewClickedAction;
@end


/// This class represents the affirm configration in checkout info.
SWIFT_CLASS("_TtC11OPPWAMobile15OPPAffirmConfig")
@interface OPPAffirmConfig : NSObject
/// Public key required for affirm object configuration.
@property (nonatomic, readonly, copy) NSString * _Nonnull publicKey;
/// Indicates active VCN configuration.
@property (nonatomic, readonly) BOOL isActive;
/// Creates affirm object.
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey isActive:(BOOL)isActive OBJC_DESIGNATED_INITIALIZER;
/// To do equality check on configuration object.
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Class to encapsulate all necessary transaction parameters for performing affirm transaction.
SWIFT_CLASS("_TtC11OPPWAMobile22OPPAffirmPaymentParams")
@interface OPPAffirmPaymentParams : OPPPaymentParams
@property (nonatomic, copy) NSString * _Nullable token;
/// Create affirm payment parameters object.
+ (OPPAffirmPaymentParams * _Nullable)affirmPaymentParamsWithCheckoutId:(NSString * _Nonnull)checkoutId error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary * _Nonnull)dictionaryForExecutingTransaction SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID paymentBrand:(NSString * _Nullable)paymentBrand error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPAffirmProcessor (SWIFT_EXTENSION(OPPWAMobile))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilAffirmCheckoutConfig;)
+ (NSString * _Nonnull)kNilAffirmCheckoutConfig SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilCheckoutData;)
+ (NSString * _Nonnull)kNilCheckoutData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilAffirmCheckoutData;)
+ (NSString * _Nonnull)kNilAffirmCheckoutData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNilAffirmCheckoutView;)
+ (NSString * _Nonnull)kNilAffirmCheckoutView SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kShopperCancelledTransaction;)
+ (NSString * _Nonnull)kShopperCancelledTransaction SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCheckoutCancelledWithReason;)
+ (NSString * _Nonnull)kCheckoutCancelledWithReason SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kAffirmSdkNotLoaded;)
+ (NSString * _Nonnull)kAffirmSdkNotLoaded SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kInvalidUnitPrice;)
+ (NSString * _Nonnull)kInvalidUnitPrice SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kInvalidCheckoutAmount;)
+ (NSString * _Nonnull)kInvalidCheckoutAmount SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kInvalidDiscountAmount;)
+ (NSString * _Nonnull)kInvalidDiscountAmount SWIFT_WARN_UNUSED_RESULT;
@end

enum OPPAmazonPayRegion : NSInteger;

/// Class to encapsulate all necessary brand configurations required for AmazonPay  transaction.
SWIFT_CLASS("_TtC11OPPWAMobile18OPPAmazonPayConfig")
@interface OPPAmazonPayConfig : OPPBrandConfig
/// AmazonPay region object.
@property (nonatomic, readonly) enum OPPAmazonPayRegion region;
/// Creates an object representing an AmazonPay brand configuration.
- (nonnull instancetype)initWithRegion:(enum OPPAmazonPayRegion)region OBJC_DESIGNATED_INITIALIZER;
/// Payment brand for the configuration object.
@property (nonatomic, readonly) OPPPaymentBrand _Nonnull paymentBrand;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// An enumeration for the possible regions for AmazonPay.
typedef SWIFT_ENUM(NSInteger, OPPAmazonPayRegion, open) {
  OPPAmazonPayRegionUS = 0,
  OPPAmazonPayRegionDE = 1,
  OPPAmazonPayRegionUK = 2,
  OPPAmazonPayRegionFR = 3,
  OPPAmazonPayRegionIT = 4,
  OPPAmazonPayRegionES = 5,
  OPPAmazonPayRegionJP = 6,
};


/// Class to encapsulate all necessary transaction parameters for performing
/// AmazonPay Payments transaction.
SWIFT_CLASS("_TtC11OPPWAMobile25OPPAmazonPayPaymentParams")
@interface OPPAmazonPayPaymentParams : OPPPaymentParams
/// AmazonPay configuration object.
@property (nonatomic, readonly, strong) OPPAmazonPayConfig * _Nonnull configuration;
/// :nodoc:
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID configuration:(OPPAmazonPayConfig * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
/// Creates an object representing an AmazonPay transaction.
/// @param checkoutID The checkout ID of the transaction. Must be not <code>nil</code> or empty.
/// @param configuration Set  AmazonPay brand configuration.
/// @return Returns an object representing an AmazonPay transaction.
+ (OPPAmazonPayPaymentParams * _Nullable)amazonPayPaymentParamsWithCheckoutID:(NSString * _Nonnull)checkoutID configuration:(OPPAmazonPayConfig * _Nonnull)configuration error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary * _Nonnull)dictionaryForExecutingTransaction SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCheckoutID:(NSString * _Nonnull)checkoutID paymentBrand:(NSString * _Nullable)paymentBrand error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
@end

@class NSURL;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile26OPPAmazonPayResponseParser")
@interface OPPAmazonPayResponseParser : NSObject
- (nonnull instancetype)initWithTransaction:(OPPTransaction * _Nonnull)transaction OBJC_DESIGNATED_INITIALIZER;
- (NSURL * _Nullable)getRedirectUrlFrom:(id _Nonnull)response error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPAnalyticsData")
@interface OPPAnalyticsData : NSObject
+ (NSString * _Nonnull)getOS SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getRedShieldBlackbox SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getMSDKVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getDeviceModel SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPAnalyticsDataIntegrationType, open) {
  OPPAnalyticsDataIntegrationTypeCustom = 0,
  OPPAnalyticsDataIntegrationTypeCheckoutUI = 1,
  OPPAnalyticsDataIntegrationTypeDropInButton = 2,
};

@class OPPCheckoutProvider;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile19OPPApplePayDelegate")
@interface OPPApplePayDelegate : NSObject
@property (nonatomic, strong) OPPCheckoutProvider * _Nullable checkoutProvider;
@property (nonatomic, copy) void (^ _Nullable successfulCompletion)(OPPPaymentParams * _Nonnull);
- (void)cleanUp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PKPaymentAuthorizationViewController;
@class PKShippingMethod;
@class PKPaymentRequestShippingMethodUpdate;
@class PKPaymentSummaryItem;
@class PKContact;
@class PKPaymentRequestShippingContactUpdate;
@class PKPayment;
@class PKPaymentAuthorizationResult;

@interface OPPApplePayDelegate (SWIFT_EXTENSION(OPPWAMobile)) <PKPaymentAuthorizationViewControllerDelegate>
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingMethod:(PKShippingMethod * _Nonnull)shippingMethod handler:(void (^ _Nonnull)(PKPaymentRequestShippingMethodUpdate * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingMethod:(PKShippingMethod * _Nonnull)shippingMethod completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus, NSArray<PKPaymentSummaryItem *> * _Nonnull))completion;
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingContact:(PKContact * _Nonnull)contact handler:(void (^ _Nonnull)(PKPaymentRequestShippingContactUpdate * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didSelectShippingContact:(PKContact * _Nonnull)contact completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus, NSArray<PKShippingMethod *> * _Nonnull, NSArray<PKPaymentSummaryItem *> * _Nonnull))completion;
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didAuthorizePayment:(PKPayment * _Nonnull)payment handler:(void (^ _Nonnull)(PKPaymentAuthorizationResult * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)paymentAuthorizationViewController:(PKPaymentAuthorizationViewController * _Nonnull)controller didAuthorizePayment:(PKPayment * _Nonnull)payment completion:(void (^ _Nonnull)(PKPaymentAuthorizationStatus))completion;
- (void)paymentAuthorizationViewControllerDidFinish:(PKPaymentAuthorizationViewController * _Nonnull)controller;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPApplePayStatus, open) {
  OPPApplePayStatusInitialized = 0,
  OPPApplePayStatusMerchantRejected = 1,
  OPPApplePayStatusAppleAuthorized = 2,
};

@class PKPaymentRequest;
@class OPPCheckoutInfo;
@class OPPApplePayRequestAuthorizationResult;
@class OPPApplePayRequestShippingContactUpdate;
@class OPPApplePayRequestShippingMethodUpdate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPApplePayUtil")
@interface OPPApplePayUtil : NSObject
+ (PKPaymentRequest * _Nullable)applePayPaymentRequestFor:(PKPaymentRequest * _Nullable)request and:(OPPCheckoutInfo * _Nullable)checkoutInfo SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)canSubmitApplePayRequestFor:(PKPaymentRequest * _Nullable)request SWIFT_WARN_UNUSED_RESULT;
+ (PKPaymentAuthorizationViewController * _Nullable)getApplePayViewControllerFor:(PKPaymentRequest * _Nonnull)request SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isRecurringPaymentRequestEnabledWith:(PKPaymentRequest * _Nullable)request SWIFT_WARN_UNUSED_RESULT;
+ (PKPaymentAuthorizationResult * _Nonnull)convertAuthorizationWithResult:(OPPApplePayRequestAuthorizationResult * _Nonnull)result SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
+ (PKPaymentRequestShippingContactUpdate * _Nonnull)convertShippingContactWithUpdate:(OPPApplePayRequestShippingContactUpdate * _Nonnull)update SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
+ (PKPaymentRequestShippingMethodUpdate * _Nonnull)convertShippingMethodWithUpdate:(OPPApplePayRequestShippingMethodUpdate * _Nonnull)update SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=11.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPBankAccountPaymentParams (SWIFT_EXTENSION(OPPWAMobile))
+ (NSArray<NSString *> * _Nullable)tvr_titlesFor:(NSString * _Nullable)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)tvr_valueFor:(NSString * _Nonnull)title paymentBrand:(NSString * _Nullable)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)tvr_countryCodeWith:(NSString * _Nonnull)country SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)tvr_bankNameCodeWith:(NSString * _Nonnull)bankName SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerTransitionCoordinator;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPBaseCardScanningViewController")
@interface OPPBaseCardScanningViewController : UIViewController <AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class OPPBlikDetailsViewModel;
@class OPPPaymentFormHeaderView;
@protocol SFSafariViewControllerDelegate;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPBlikDetailsViewController")
@interface OPPBlikDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPBlikDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (void)loadURL:(OPPTransaction * _Nonnull)transaction;
- (void)reEnterPin;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <SFSafariViewControllerDelegate>
@end

@class UITextView;
@class UITextItem;
@class UIAction;

@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextViewDelegate>
- (UIAction * _Nullable)textView:(UITextView * _Nonnull)textView primaryActionForTextItem:(UITextItem * _Nonnull)textItem defaultAction:(UIAction * _Nonnull)defaultAction SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=17.0);
@end


@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
+ (OPPBlikDetailsViewController * _Nullable)sharedInstance:(OPPBlikDetailsViewModel * _Nonnull)viewModel SWIFT_WARN_UNUSED_RESULT;
@end

@class WKWebView;
@class WKNavigationAction;
@class WKNavigation;

@interface OPPBlikDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPBlikDetailsViewModel")
@interface OPPBlikDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImageView;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPBrandCollectionViewCell")
@interface OPPBrandCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified imageView;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified wrapperView;
@property (nonatomic, getter=isSelected) BOOL selected;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCardBrandInfo;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile12OPPBrandInfo")
@interface OPPBrandInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull brand;
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
@property (nonatomic, readonly, copy) NSString * _Nonnull renderType;
@property (nonatomic, strong) OPPCardBrandInfo * _Nullable cardBrandInfo;
@property (nonatomic) BOOL isCustomUiRequired;
- (nullable instancetype)initWithBrand:(NSString * _Nonnull)brand renderType:(NSString * _Nonnull)renderType label:(NSString * _Nonnull)label OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithBrand:(NSString * _Nonnull)brand json:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile18OPPBrandsValidator")
@interface OPPBrandsValidator : NSObject
+ (BOOL)isCardBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getLabelForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasCustomUiForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getBrandsWithMissingUi SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UINavigationController;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile14OPPBrowserData")
@interface OPPBrowserData : NSObject
+ (void)m3dspAddWebThreeDSParamsTo:(OPPPaymentParams * _Nonnull)params controller:(UINavigationController * _Nonnull)controller :(void (^ _Nonnull)(void))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>OPPCDBilling</code> holds the billing address of the customer.
SWIFT_CLASS("_TtC11OPPWAMobile12OPPCDBilling")
@interface OPPCDBilling : NSObject
/// The door number, floor, building number, building name, and/or street name of the billing address.
@property (nonatomic, copy) NSString * _Nullable street1;
/// The adjoining road or locality (if required) of the billing address.
@property (nonatomic, copy) NSString * _Nullable street2;
/// The town or city of the billing address.
@property (nonatomic, copy) NSString * _Nullable city;
/// The state or region of the billing address.
@property (nonatomic, copy) NSString * _Nullable state;
/// The postal code or zip code of the billing address.
@property (nonatomic, copy) NSString * _Nullable postcode;
/// The country of the billing address.
@property (nonatomic, copy) NSString * _Nullable country;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCDItem;

/// The Cart holds the cart items information.
SWIFT_CLASS("_TtC11OPPWAMobile9OPPCDCart")
@interface OPPCDCart : NSObject
/// List of items in the cart.
@property (nonatomic, copy) NSArray<OPPCDItem *> * _Nullable items;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Provides the customer details like name, email, etc.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPCDCustomer")
@interface OPPCDCustomer : NSObject
/// The given name or first name of customer.
@property (nonatomic, copy) NSString * _Nullable givenName;
/// The last name or surname of customer.
@property (nonatomic, copy) NSString * _Nullable surname;
/// The email of customer.
@property (nonatomic, copy) NSString * _Nullable email;
/// The fullname of customer by combining given name and surname.
@property (nonatomic, readonly, copy) NSString * _Nullable fullName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The<code>OPPCDItem</code> holds the product information such as the product’s name, quantity, price and more.
SWIFT_CLASS("_TtC11OPPWAMobile9OPPCDItem")
@interface OPPCDItem : NSObject
/// The name of an item in the shopping cart.
@property (nonatomic, copy) NSString * _Nullable name;
/// The number of items in the shopping cart.
@property (nonatomic, copy) NSString * _Nullable quantity;
/// The price of an item in the shopping cart.
@property (nonatomic, copy) NSString * _Nullable price;
/// The sku of an item in the cart item.
@property (nonatomic, copy) NSString * _Nullable sku;
/// The cart item’s URL.
@property (nonatomic, copy) NSString * _Nullable productURL;
/// The cart item’s image URL.
@property (nonatomic, copy) NSString * _Nullable imageURL;
/// The cart item’s total discount amount.
@property (nonatomic, copy) NSString * _Nullable totalDiscountAmount;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The Merchant holds the merchant information.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPCDMerchant")
@interface OPPCDMerchant : NSObject
/// To get or set the merchant name.
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>OPPCDShipping</code> holds the shipping details of ordered goods.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPCDShipping")
@interface OPPCDShipping : NSObject
/// The door number, floor, building number, building name, and/or street name of the shipping address.
@property (nonatomic, copy) NSString * _Nullable street1;
/// The adjoining road or locality (if required) of the shipping address.
@property (nonatomic, copy) NSString * _Nullable street2;
/// The town or city of the shipping address.
@property (nonatomic, copy) NSString * _Nullable city;
/// The state or region of the shipping address.
@property (nonatomic, copy) NSString * _Nullable state;
/// The postal code or zip code of the shipping address.
@property (nonatomic, copy) NSString * _Nullable postcode;
/// The country of the shipping address.
@property (nonatomic, copy) NSString * _Nullable country;
/// The total amount of the shipping cost.
@property (nonatomic, copy) NSString * _Nullable cost;
/// Provides the customer details.
@property (nonatomic, strong) OPPCDCustomer * _Nullable customer;
/// The phone number for shipping address.
@property (nonatomic, copy) NSString * _Nullable phone;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum OPPCardBrandInfoCvvMode : NSInteger;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardBrandInfo")
@interface OPPCardBrandInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull validationRegex;
@property (nonatomic, readonly, copy) NSString * _Nullable detectionRegex;
@property (nonatomic, readonly, copy) NSString * _Nonnull pattern;
@property (nonatomic) NSInteger cvvLength;
@property (nonatomic) BOOL isLuhnCheckRequired;
@property (nonatomic) BOOL isExpiryDateOptional;
@property (nonatomic) enum OPPCardBrandInfoCvvMode cvvMode;
@property (nonatomic) BOOL isMobilePhoneRequired;
- (nullable instancetype)initWithValidationRegex:(NSString * _Nonnull)validationRegex detectionRegex:(NSString * _Nullable)detectionRegex pattern:(NSString * _Nonnull)pattern OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPCardBrandInfoCvvMode, open) {
  OPPCardBrandInfoCvvModeNone = 0,
  OPPCardBrandInfoCvvModeRequired = 1,
  OPPCardBrandInfoCvvModeOptional = 2,
};

@class OPPSCardDetailsViewModel;
@class UITextField;
@class UIPickerView;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardDetailsViewController")
@interface OPPCardDetailsViewController : OPPRootViewController
@property (nonatomic, readonly, strong) OPPSCardDetailsViewModel * _Nonnull viewModel;
@property (nonatomic, strong) UITextField * _Nullable activeTextField;
@property (nonatomic, strong) UIPickerView * _Nullable installmentsPickerView;
- (nullable instancetype)initWithViewModel:(OPPSCardDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPAddressViewDelegate>
- (void)addressViewClickedAction;
@end

@class OPPBillingAddress;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile36OPPEditAddressViewControllerDelegate_")
@protocol OPPEditAddressViewControllerDelegate
- (void)updateAddress:(OPPBillingAddress * _Nonnull)address;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPEditAddressViewControllerDelegate>
- (void)updateAddress:(OPPBillingAddress * _Nonnull)address;
@end

@class NSNotification;

@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end

@class OPPCardScanningResult;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile37OPPCardScanningViewControllerDelegate_") SWIFT_AVAILABILITY(ios,introduced=13.0)
@protocol OPPCardScanningViewControllerDelegate <NSObject>
- (void)cardScan:(UIViewController * _Nonnull)viewController didFinishWith:(OPPCardScanningResult * _Nullable)result and:(NSError * _Nullable)error;
- (void)cardScanDidCancel:(UIViewController * _Nonnull)viewController;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPCardScanningViewControllerDelegate>
- (void)cardScan:(UIViewController * _Nonnull)viewController didFinishWith:(OPPCardScanningResult * _Nullable)result and:(NSError * _Nullable)error;
- (void)cardScanDidCancel:(UIViewController * _Nonnull)viewController;
@end





@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)updateViewConstraints;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)updateViewWithAnimation;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UIPickerViewDataSource, UIPickerViewDelegate>
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
@end

@class UICollectionView;
@class NSIndexPath;

@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end




@interface OPPCardDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end



@class VNRequest;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardScanUtils")
@interface OPPCardScanUtils : NSObject
+ (void)expirationDate:(VNRequest * _Nonnull)request completion:(SWIFT_NOESCAPE void (^ _Nonnull)(NSString * _Nonnull, VNConfidence))completion SWIFT_AVAILABILITY(ios,introduced=13.0);
+ (void)cardNumber:(VNRequest * _Nonnull)request completion:(SWIFT_NOESCAPE void (^ _Nonnull)(NSString * _Nonnull))completion SWIFT_AVAILABILITY(ios,introduced=13.0);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPCardScanningConstants")
@interface OPPCardScanningConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCardScanningAvailabilityMessage;)
+ (NSString * _Nonnull)kCardScanningAvailabilityMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPCardScanningResult")
@interface OPPCardScanningResult : NSObject
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardScanningViewController") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface OPPCardScanningViewController : OPPBaseCardScanningViewController
@property (nonatomic, weak) id <OPPCardScanningViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(BOOL)animated;
@end

@class AVCaptureOutput;
@class AVCaptureConnection;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface OPPCardScanningViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end




/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPCardValidator")
@interface OPPCardValidator : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardValidatorDefaultNumberRegex;)
+ (NSString * _Nonnull)OPPCardValidatorDefaultNumberRegex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardValidatorDefaultNumberPattern;)
+ (NSString * _Nonnull)OPPCardValidatorDefaultNumberPattern SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger OPPCardValidatorDefaultCVVLength;)
+ (NSInteger)OPPCardValidatorDefaultCVVLength SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)cvvLengthForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)paymentBrandsDetectedForCardNumber:(NSString * _Nonnull)cardNumber includeUnknown:(BOOL)includeUnknown SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)validateWithCardNumber:(NSString * _Nonnull)cardNumber paymentBrand:(NSString * _Nonnull)paymentBrand detectedBrands:(NSArray<NSString *> * _Nullable)detectedBrands SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)patternForCardNumberWithPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isExpiryDateOptionalForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (enum OPPCardBrandInfoCvvMode)cvvModeForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isMobilePhoneRequiredForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)detectionRegexForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPassingLuhnCheckWithCardNumber:(NSString * _Nonnull)cardNumber SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol OPPCardControllerDelegate;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardViewController")
@interface OPPCardViewController : UIViewController
@property (nonatomic, strong) id <OPPCardControllerDelegate> _Nullable cardControllerDelegate;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)updateViewConstraints;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPAddressViewDelegate, OPPEditAddressViewControllerDelegate>
- (void)addressViewClickedAction;
- (void)updateAddress:(OPPBillingAddress * _Nonnull)address;
@end


@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPCardDetailsDataSource>
- (UITextField * _Nonnull)cardControllerCardNumberTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerCardHolderTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerExpirationDateTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerCVVTextField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerMobilePhoneField SWIFT_WARN_UNUSED_RESULT;
- (UITextField * _Nonnull)cardControllerCountryCodeField SWIFT_WARN_UNUSED_RESULT;
- (void)cardControllerTextField:(UITextField * _Nonnull)textField errorDidHappen:(NSError * _Nullable)error;
- (void)cardControllerTextField:(UITextField * _Nonnull)textField shouldChangeVisibility:(BOOL)hidden;
- (void)cardControllerOnPaymentBrandsDetected:(NSArray<NSString *> * _Nullable)paymentBrands error:(NSError * _Nullable)error;
@end


@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



@interface OPPCardViewController (SWIFT_EXTENSION(OPPWAMobile)) <UIPickerViewDataSource, UIPickerViewDelegate, UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component SWIFT_WARN_UNUSED_RESULT;
- (void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPCardsSectionDelegate")
@interface OPPCardsSectionDelegate : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPCardCollectionViewCellReuseId;)
+ (NSString * _Nonnull)OPPCardCollectionViewCellReuseId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPCardsSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface OPPCardsSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPCardsTableViewCell")
@interface OPPCardsTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPCardsCollectionCellWidth;)
+ (CGFloat)OPPCardsCollectionCellWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPCardsCollectionCellHeight;)
+ (CGFloat)OPPCardsCollectionCellHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPCardsCollectionCellMinItemSpace;)
+ (CGFloat)OPPCardsCollectionCellMinItemSpace SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSLocale;

/// Class to encapsulate all necessary brand configurations required for Cash App Pay  transaction.
SWIFT_CLASS("_TtC11OPPWAMobile24OPPCashAppPayBrandConfig")
@interface OPPCashAppPayBrandConfig : OPPAfterpayConfig
/// Creates an object representing an Cash App Pay brand configuration.
- (nullable instancetype)initWithMinimumAmount:(NSString * _Nonnull)minimumAmount maximumAmount:(NSString * _Nonnull)maximumAmount currencyCode:(NSString * _Nonnull)currencyCode locale:(NSLocale * _Nonnull)locale consumerLocale:(NSLocale * _Nonnull)consumerLocale OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) OPPPaymentBrand _Nonnull paymentBrand;
- (nullable instancetype)initWithWithMinimumAmount:(NSString * _Nonnull)minimumAmount maximumAmount:(NSString * _Nonnull)maximumAmount locale:(NSLocale * _Nonnull)locale consumerLocale:(NSLocale * _Nonnull)consumerLocale SWIFT_UNAVAILABLE;
@end


@interface OPPCashAppPayProcessor (SWIFT_EXTENSION(OPPWAMobile))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderToken;)
+ (NSString * _Nonnull)kFailedToSigningOrderToken SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToInvalidAmount;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToInvalidAmount SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToInvalidRedirectURL;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToInvalidRedirectURL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToInvalidJwtDecodeNull;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToInvalidJwtDecodeNull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToDecodeError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToDecodeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToJwtDecodeError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToJwtDecodeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToHttpError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToHttpError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFailedToSigningOrderTokenDueToSignInError;)
+ (NSString * _Nonnull)kFailedToSigningOrderTokenDueToSignInError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailed;)
+ (NSString * _Nonnull)kCashAppValidationFailed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToNilData;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToNilData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToDecodeError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToDecodeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToUnknownError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToUnknownError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToInvalidData;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToInvalidData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToHttpError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToHttpError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppValidationFailedDueToValidationError;)
+ (NSString * _Nonnull)kCashAppValidationFailedDueToValidationError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppStateError;)
+ (NSString * _Nonnull)kCashAppStateError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppIntegrationError;)
+ (NSString * _Nonnull)kCashAppIntegrationError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppNetworkError;)
+ (NSString * _Nonnull)kCashAppNetworkError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppApiError;)
+ (NSString * _Nonnull)kCashAppApiError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppUnexpectedError;)
+ (NSString * _Nonnull)kCashAppUnexpectedError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCashAppUnknownTransactionState;)
+ (NSString * _Nonnull)kCashAppUnknownTransactionState SWIFT_WARN_UNUSED_RESULT;
@end


/// Represents the checkout data, shipping and billing address, cart items and more.
SWIFT_CLASS("_TtC11OPPWAMobile15OPPCheckoutData")
@interface OPPCheckoutData : NSObject
/// Checkout Data shopper’s shipping address.
@property (nonatomic, strong) OPPCDShipping * _Nullable shipping;
/// Checkout Data shopper’s billing address.
@property (nonatomic, strong) OPPCDBilling * _Nullable billing;
/// Checkout Data shopper’s cart object.
@property (nonatomic, strong) OPPCDCart * _Nullable cart;
/// Checkout Data shopper’s cart total amount.
@property (nonatomic, copy) NSString * _Nullable amount;
/// Checkout Data shopper’s currency.
@property (nonatomic, copy) NSString * _Nullable currency;
/// Checkout Data tax amount.
@property (nonatomic, copy) NSString * _Nullable taxAmount;
/// Checkout Data merchant transaction id.
@property (nonatomic, copy) NSString * _Nullable merchantTransactionID;
/// Checkout Data merchant object.
@property (nonatomic, strong) OPPCDMerchant * _Nullable merchant;
/// name Initialization
/// Creates checkout info object from the JSON that can be received from the Server by checkout ID.
/// param JSON A dictionary with parameters received from the Server.
/// param error An error if JSON is invalid.
/// return Returns an <code>OPPCheckoutInfo</code> object, or <code>nil</code> if JSON is invalid.
+ (OPPCheckoutData * _Nullable)checkoutData:(NSDictionary<NSString *, id> * _Nonnull)JSON error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPCheckoutDeviceAuth")
@interface OPPCheckoutDeviceAuth : NSObject
+ (void)cpd_requestDeviceAuthIfNeededFor:(NSString * _Nonnull)paymentBrand isToken:(BOOL)isToken paymentParams:(OPPPaymentParams * _Nonnull)paymentParams completion:(void (^ _Nonnull)(BOOL))completion;
+ (OPPSecurityPolicyMode)cpd_deviceAuthModeFor:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
+ (OPPSecurityPolicyMode)cpd_deviceAuthModeForTokens SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPCheckoutLocalization")
@interface OPPCheckoutLocalization : NSObject
@property (nonatomic, copy) NSString * _Nullable language;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPCheckoutLocalization * _Nonnull sharedInstance;)
+ (OPPCheckoutLocalization * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nonnull)viewControllerTitlePaymentMethodSelection SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitlePaymentDetails SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitleProcessing SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)viewControllerTitleAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)alertTitleCardScanningFailed SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTotalAmount SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelMBWayPushNotification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelMBWayAcceptPin SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTermsAndConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelTermsAndConditionsAgreement SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelSwedish SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelFinnish SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelSTCPaySelectPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelCardScanHoldHere SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikTermsAndConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikRegulations SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)labelBlikTncUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)messagePleaseWait SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)processingLabelForBlik SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityLabelForBlik SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)deviceAuthReason SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitlePay SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitlePayAmount SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleRegister SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleCancel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleBack SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleDone SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)buttonTitleOK SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCardHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCreditCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCVV SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelMobilePhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelBankAccountHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelIBAN SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelIBANOrAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelBICOrBankCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelSelectCountry SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelSelectBank SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelStorePaymentDetails SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelChooseCardType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelNumberOfInstallments SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelQRCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelCountryCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelNationalIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelRoutingNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelAccountVerification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldLabelOTP SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCardHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVV3Digits SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVV4Digits SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderBankAccountHolderName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderIBAN SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderIBANOrAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderBICOrBankCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderMobilePhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCountryCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderNationalIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderAccountNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderRoutingNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderAccountVerification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderStreet1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderStreet2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCounty SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderPostcode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderOptional SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardHolderNameInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpiryDateInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpired SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVV3DigitsInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVV4DigitsInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBankAccountHolderInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorIBANInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorIBANOrAccountNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorRoutingNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBICOrBankCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorEmailInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorMobilePhoneInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCountryCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorNationalIdentifierInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountNumberInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountExpiryDateInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAccountExpired SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorAddressInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorDateOfBirthInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorBankCodeInvalid SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupStored SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupOther SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)paymentMethodGroupCards SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)titleForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityPayWith SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityCancelCheckout SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityScanCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)accessibilityPayWithStoredPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderExpiryDateWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldPlaceholderCVVWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardExpiryDateInvalidWeb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)fieldErrorCardCVVInvalidWeb SWIFT_WARN_UNUSED_RESULT;
/// returns localized string for deprecated key if actual key is not used yet
- (NSString * _Nonnull)localizedStringForDeprecatedKey:(NSString * _Nonnull)deprecatedKey actualKey:(NSString * _Nonnull)actualKey defaultValue:(NSString * _Nullable)defaultValue SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile28OPPCheckoutPaymentValidation")
@interface OPPCheckoutPaymentValidation : NSObject
+ (void)isPaymentBrandValidWithPaymentBrand:(NSString * _Nonnull)paymentBrand completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
+ (void)isApplePayConfiguredWith:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
+ (void)isKlarnaConfiguredWith:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
+ (void)isKlarnaInlineConfiguredWithCompletionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable, BOOL))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPCheckoutSettings;
@class OPPPaymentProvider;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile31OPPCheckoutSharedPaymentDetails")
@interface OPPCheckoutSharedPaymentDetails : NSObject
@property (nonatomic, strong) OPPCheckoutSettings * _Nullable checkoutSettings;
@property (nonatomic, copy) NSString * _Nullable checkoutID;
@property (nonatomic, strong) OPPCheckoutInfo * _Nullable checkoutInfo;
@property (nonatomic, copy) NSString * _Nullable paymentBrand;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable detectedBrandsPriority;
@property (nonatomic, strong) OPPPaymentProvider * _Nullable provider;
@property (nonatomic, copy) NSArray<OPPBrandInfo *> * _Nullable brandRules;
@property (nonatomic) BOOL isPaymentSchemeScreenEnabled;
@property (nonatomic) BOOL isCheckoutPresented;
@property (nonatomic) enum OPPAnalyticsDataIntegrationType integrationType;
@property (nonatomic, copy) void (^ _Nullable completeBlock)(OPPTransaction * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Nullable canceledBlock)(void);
@property (nonatomic, copy) void (^ _Nullable loadingBlock)(BOOL);
@property (nonatomic, strong) OPPApplePayDelegate * _Nonnull applePayDelegate;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable configuredPaymentBrands;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPCheckoutSharedPaymentDetails * _Nonnull sharedInstance;)
+ (OPPCheckoutSharedPaymentDetails * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// Returns YES if payment method selection screen should be skipped, otherwise NO
@property (nonatomic, readonly) BOOL shouldEnablePaymentMethodSelectionScreen;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Call the complete block, setting the given transaction and error in the response.
- (void)callCompleteBlockWithTransaction:(OPPTransaction * _Nullable)transaction error:(NSError * _Nullable)error;
/// Call the canceled block.
- (void)callCanceledBlock;
/// Call the loading block.
- (void)callLoadingBlockInProgress:(BOOL)inProgress;
- (void)clear;
- (BOOL)isCopyAndPayOverrideFor:(NSString * _Nonnull)brand SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPSCheckoutTextField;
enum OPPExpandIcon : NSInteger;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPCheckoutTextFieldView")
@interface OPPCheckoutTextFieldView : UIView
@property (nonatomic, weak) IBOutlet OPPSCheckoutTextField * _Null_unspecified textField;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified leftTextField;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull helper;
@property (nonatomic, copy) NSString * _Nullable error;
@property (nonatomic, copy) NSString * _Nonnull accessibilityId;
@property (nonatomic, strong) UIView * _Nullable parentView;
@property (nonatomic) BOOL isEditing;
@property (nonatomic) enum OPPExpandIcon expandIcon;
@property (nonatomic) BOOL enabled;
@property (nonatomic, copy) NSString * _Nullable text;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)updateConstraints;
- (NSString * _Nullable)getText SWIFT_WARN_UNUSED_RESULT;
- (void)updateText:(NSString * _Nullable)text;
- (void)setLogoImageWith:(NSString * _Nonnull)paymentBrand handler:(void (^ _Nullable)(void))handler;
- (void)beginEditing;
- (void)endEditing;
- (void)clear;
- (void)enableLeftTextFieldWith:(NSString * _Nonnull)helper accessibiltyId:(NSString * _Nullable)accessibiltyId;
@end

@class OPPToken;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPCheckoutViewRouting")
@interface OPPCheckoutViewRouting : NSObject
- (nonnull instancetype)initWithMsdkUiType:(OPPMsdkUiType)msdkUiType checkoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
/// Returns details view controller for payment brand with token if needed, otherwise nil
- (UIViewController * _Nullable)detailsViewControllerWith:(NSString * _Nonnull)paymentBrand and:(OPPToken * _Nullable)token SWIFT_WARN_UNUSED_RESULT;
/// Returns details view controller for payment brand with token and  transaction if needed, otherwise nil
- (UIViewController * _Nullable)detailsViewControllerWith:(NSString * _Nonnull)paymentBrand token:(OPPToken * _Nullable)token and:(OPPTransaction * _Nullable)transaction SWIFT_WARN_UNUSED_RESULT;
- (void)presentCopyAndPayViewControllerWithCurrentVC:(UIViewController * _Nonnull)currentVC transaction:(OPPTransaction * _Nonnull)transaction;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class OPPChinaUnionPayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPChinaUnionPayDetailsViewController")
@interface OPPChinaUnionPayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPChinaUnionPayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end




@interface OPPChinaUnionPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPChinaUnionPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end


@interface OPPChinaUnionPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile32OPPChinaUnionPayDetailsViewModel")
@interface OPPChinaUnionPayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPCopyAndPayViewModel;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile27OPPCopyAndPayViewController")
@interface OPPCopyAndPayViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPCopyAndPayViewModel * _Nullable)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPCopyAndPayViewController (SWIFT_EXTENSION(OPPWAMobile)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPCopyAndPayViewModel")
@interface OPPCopyAndPayViewModel : NSObject
@property (nonatomic) BOOL tokenEnabled;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile39OPPCustomPresentationControllerDelegate")
@interface OPPCustomPresentationControllerDelegate : UIPresentationController
- (void)adjustContentViewToHeight:(CGFloat)height;
- (void)containerViewWillLayoutSubviews;
@property (nonatomic, readonly) CGRect frameOfPresentedViewInContainerView;
- (void)presentationTransitionWillBegin;
- (void)dismissalTransitionWillBegin;
- (void)dismissalTransitionDidEnd:(BOOL)completed;
- (nonnull instancetype)initWithPresentedViewController:(UIViewController * _Nonnull)presentedViewController presentingViewController:(UIViewController * _Nullable)presentingViewController OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPCustomProgressView")
@interface OPPCustomProgressView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)hide;
- (void)show;
@end



/// A class that provides an interface to perform device authentication.
SWIFT_CLASS("_TtC11OPPWAMobile21OPPDeviceAuthProvider")
@interface OPPDeviceAuthProvider : NSObject
/// Checks if device authentication is enabled.
///
/// returns:
/// A boolean indicating whether device authentication is enabled.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isDeviceAuthEnabled;)
+ (BOOL)isDeviceAuthEnabled SWIFT_WARN_UNUSED_RESULT;
/// Performs device authentication with a localized reason.
/// \param localizedReason A string that provides a reason for the authentication request.
///
/// \param completion A closure that is called with the result of the authentication request.
///
+ (void)performDeviceAuthenticationWithLocalizedReason:(NSString * _Nonnull)localizedReason completion:(void (^ _Nonnull)(BOOL))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPDirectDebitDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPDirectDebitDetailsViewController")
@interface OPPDirectDebitDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPDirectDebitDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)updateViewConstraints;
- (void)cancelButtonAction;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPDirectDebitDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile30OPPDirectDebitDetailsViewModel")
@interface OPPDirectDebitDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand checkoutSettings:(OPPCheckoutSettings * _Nullable)checkoutSettings checkoutInfo:(OPPCheckoutInfo * _Nullable)checkoutInfo checkoutID:(NSString * _Nonnull)checkoutID;
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider token:(OPPToken * _Nonnull)token checkoutSettings:(OPPCheckoutSettings * _Nullable)checkoutSettings checkoutInfo:(OPPCheckoutInfo * _Nullable)checkoutInfo checkoutID:(NSString * _Nonnull)checkoutID;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPEditAddressViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPEditAddressViewController")
@interface OPPEditAddressViewController : UIViewController
@property (nonatomic, weak) id <OPPEditAddressViewControllerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithViewModel:(OPPEditAddressViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPEditAddressViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPAddressSelectorViewControllerDelegate>
- (void)returnSelected:(NSString * _Nullable)value and:(NSInteger)tag;
@end




/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPEditAddressViewModel")
@interface OPPEditAddressViewModel : NSObject
- (nonnull instancetype)initWithAddress:(OPPBillingAddress * _Nonnull)address OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPExpandIcon, open) {
  OPPExpandIconExpand = 0,
  OPPExpandIconCollapse = 1,
  OPPExpandIconHidden = 2,
};

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPFeatureSwitch, open) {
  OPPFeatureSwitchComponentUI = 0,
  OPPFeatureSwitchThreeDSFallbackDisabled = 1,
  OPPFeatureSwitchSwiftImplementation = 2,
  OPPFeatureSwitchSwiftCheckoutProvider = 3,
  OPPFeatureSwitchThreeDSOOBSupported = 4,
};


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPFeatureSwitchChecker")
@interface OPPFeatureSwitchChecker : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPFeatureSwitchChecker * _Nonnull shared;)
+ (OPPFeatureSwitchChecker * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isActivatedFor:(enum OPPFeatureSwitch)featureSwitch SWIFT_WARN_UNUSED_RESULT;
- (void)enableWithFeatureSwitch:(enum OPPFeatureSwitch)featureSwitch;
- (void)disableWithFeatureSwitch:(enum OPPFeatureSwitch)featureSwitch;
@end

@class NSData;

/// Utilities to work with file system using C functions to avoid Checkmarx issues
SWIFT_CLASS("_TtC11OPPWAMobile11OPPFileUtil")
@interface OPPFileUtil : NSObject
/// Read NSData from specified path.
/// @param path Absolute path to the file.
/// @return Content of the file if path is valid, otherwise nil.
+ (NSData * _Nullable)readFromPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Write NSData to specified path.
/// @param data Data to be written to the file.
/// @param path Absolute path to the file.
+ (BOOL)writeWithData:(NSData * _Nonnull)data to:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Creates directory at specified path if it does not exist yet.
/// @param path Absolute path to the directory to be created.
+ (void)createDirectoryWithPath:(NSString * _Nonnull)path;
/// Removes file at specified path.
/// @param path Absolute path to the file.
+ (BOOL)removeFileAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
/// Returns creation time if file is found, otherwise 0.
/// @param path Absolute path to the file.
+ (NSTimeInterval)fileCreationTimeAtPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPGiropayViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPGiropayDetailsViewController")
@interface OPPGiropayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPGiropayViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



@interface OPPGiropayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end


@interface OPPGiropayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPGiropayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile19OPPGiropayViewModel")
@interface OPPGiropayViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Utilities to load files from the framework bundle
SWIFT_CLASS("_TtC11OPPWAMobile9OPPIOUtil")
@interface OPPIOUtil : NSObject
/// Checks which file name to enter when trying to load a nib file from the .framework
/// @param file The file name
/// @return An NSString that can be used in initWithNibNamed:
+ (NSString * _Nullable)nibPathForResource:(NSString * _Nonnull)fileName SWIFT_WARN_UNUSED_RESULT;
/// Checks which filename to enter when trying to load a file from the .framework
/// @param file The file name
/// @param type The file type
/// @return An NSString that can be used for loading e.g. via [UIImage imageNamed:]
+ (NSString * _Nullable)shortPathForResource:(NSString * _Nonnull)fileName type:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
/// Checks which file name to enter when trying to load a file from the .framework
/// @param file The file name
/// @param type The file type
/// @return An NSString that can be used for loading e.g. via [NSDictionary dictionaryWithContentsOfFile:]
+ (NSString * _Nullable)pathForResource:(NSString * _Nonnull)fileName type:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPIkanoDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPIkanoDetailsViewController")
@interface OPPIkanoDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPIkanoDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

@class UIButton;

@interface OPPIkanoDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (void)configurePaymentButton:(UIButton * _Nonnull)paymentButton;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPIkanoDetailsViewModel")
@interface OPPIkanoDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class OPPIkanoPrivateLabelVADetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPIkanoPrivateLabelVADetailsViewController")
@interface OPPIkanoPrivateLabelVADetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPIkanoPrivateLabelVADetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end




@interface OPPIkanoPrivateLabelVADetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPIkanoPrivateLabelVADetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPIkanoPrivateLabelVADetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile38OPPIkanoPrivateLabelVADetailsViewModel")
@interface OPPIkanoPrivateLabelVADetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIImage;

/// Shared image cache.
/// Stores images in fast memory cache and disk cache for specific period of time.
SWIFT_CLASS("_TtC11OPPWAMobile13OPPImageCache")
@interface OPPImageCache : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPImageCache * _Nonnull shared;)
+ (OPPImageCache * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSDictionary<NSString *, UIImage *> * _Nullable customImages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (UIImage * _Nullable)imageForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


/// Class for managing asynchronous downloads of brand logos from the Server.
SWIFT_CLASS("_TtC11OPPWAMobile14OPPImageLoader")
@interface OPPImageLoader : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OPPImageLoader * _Nonnull shared;)
+ (OPPImageLoader * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// imageURLs should be set before calling loading method.
/// @param URLs Map of logo URLs for payment brands.
- (void)addURLs:(NSDictionary<NSString *, NSURL *> * _Nonnull)URLs;
/// Checks if URL exists for specified payment brand.
/// @param paymentBrand Payment brand to check URL.
- (BOOL)hasURLForPaymentBrand:(NSString * _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
/// Loads logo for specified payment brand from the Server.
/// @param paymentBrand Payment brand to load the logo.
/// @param completion Completion block to be executed when download task returns result. Always called on main thread.
- (void)loadLogoForPaymentBrand:(NSString * _Nonnull)paymentBrand completion:(void (^ _Nonnull)(UIImage * _Nullable))completion;
@end

@class OPPInstantPayViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPInstantPayDetailsViewController")
@interface OPPInstantPayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPInstantPayViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)configureUI;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPInstantPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPInstantPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPInstantPayViewModel")
@interface OPPInstantPayViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPKlarnaDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPKlarnaDetailsViewController")
@interface OPPKlarnaDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPKlarnaDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)updateViewConstraints;
- (void)configureUI;
- (void)configurePaymentButton:(UIButton * _Nonnull)paymentButton;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPKlarnaDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
@end

@class UITableView;

@interface OPPKlarnaDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPKlarnaDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile25OPPKlarnaDetailsViewModel")
@interface OPPKlarnaDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OPPKlarnaInlineViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPKlarnaInlineViewController")
@interface OPPKlarnaInlineViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPKlarnaInlineViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class OPPKlarnaPaymentViewWrapper;

@interface OPPKlarnaInlineViewController (SWIFT_EXTENSION(OPPWAMobile)) <OPPKlarnaPaymentViewWrapperDelegate>
- (void)klarnaAuthorizedWithPaymentViewWrapper:(OPPKlarnaPaymentViewWrapper * _Nonnull)paymentView approved:(BOOL)approved authToken:(NSString * _Nullable)authToken finalizeRequired:(BOOL)finalizeRequired;
- (void)klarnaFailedInPaymentViewWrapper:(OPPKlarnaPaymentViewWrapper * _Nonnull)paymentView withError:(NSError * _Nonnull)error;
- (void)klarnaLoadedWithPaymentViewWrapper:(OPPKlarnaPaymentViewWrapper * _Nonnull)paymentView;
@end


@interface OPPKlarnaInlineViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureUI;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPKlarnaInlineViewModel")
@interface OPPKlarnaInlineViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider transaction:(OPPTransaction * _Nonnull)transaction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class NSURLSession;
@class NSURLSessionTask;
@class NSHTTPURLResponse;
@class NSURLRequest;

@interface OPPKlarnaInlineViewModel (SWIFT_EXTENSION(OPPWAMobile)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
@end

@class UILabel;
@class UISwitch;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPKlarnaTableViewCell")
@interface OPPKlarnaTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified titleLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified linkTextView;
@property (nonatomic, weak) IBOutlet UISwitch * _Null_unspecified agreementSwitcher;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified termsTextView;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified termsImageView;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPLibValidator")
@interface OPPLibValidator : NSObject
+ (BOOL)isThreeDSFrameworksLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isFraudForceLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isKlarnaInlineLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAfterPayLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCashAppPayLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAffirmLibLoaded SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)validLoadedLibs SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPListDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPListDetailsViewController")
@interface OPPListDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPListDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPListDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPListDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile23OPPListDetailsViewModel")
@interface OPPListDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPLogLevel, open) {
  OPPLogLevelOff = 0,
  OPPLogLevelError = 100,
  OPPLogLevelWarning = 200,
  OPPLogLevelInfo = 300,
  OPPLogLevelDebug = 1000,
};


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile13OPPLogMessage")
@interface OPPLogMessage : NSObject <NSCoding>
@property (nonatomic) NSTimeInterval timestamp;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum OPPLogLevel logLevel;
- (nullable instancetype)initWithMessage:(NSString * _Nonnull)message logLevel:(enum OPPLogLevel)logLevel checkoutID:(NSString * _Nonnull)checkoutID;
+ (nullable instancetype)logMessageWithMessage:(NSString * _Nonnull)message logLevel:(enum OPPLogLevel)logLevel checkoutID:(NSString * _Nonnull)checkoutID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEmpty SWIFT_WARN_UNUSED_RESULT;
- (enum OPPLogLevel)getLogLevel SWIFT_WARN_UNUSED_RESULT;
- (NSTimeInterval)getTimeStamp SWIFT_WARN_UNUSED_RESULT;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPLoggerServiceProtocol;
@class NSURLResponse;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile9OPPLogger")
@interface OPPLogger : NSObject
+ (OPPLogger * _Nullable)sharedInstance:(id <OPPLoggerServiceProtocol> _Nullable)loggerService SWIFT_WARN_UNUSED_RESULT;
- (void)updateLogLevelWithString:(NSString * _Nullable)logLevelString;
- (void)logWithInfo:(NSString * _Nonnull)info properties:(NSDictionary<NSString *, id> * _Nullable)properties checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithWarning:(NSString * _Nonnull)warning checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithError:(NSError * _Nullable)error checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithDebug:(NSString * _Nonnull)debug properties:(NSDictionary<NSString *, id> * _Nullable)properties checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithRequest:(NSURLRequest * _Nonnull)request checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logWithResponse:(NSURLResponse * _Nonnull)response checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logConfiguredWithPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logUnconfiguredWithPaymentBrand:(NSString * _Nonnull)paymentBrand checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logCheckoutStartedWithCheckoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode;
- (void)logReplacingWithOldCheckoutID:(NSString * _Nonnull)oldCheckoutID with:(NSString * _Nonnull)newCheckoutID mode:(OPPProviderMode)mode;
- (void)sendLogs;
- (void)sendOldLogs;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPLogger (SWIFT_EXTENSION(OPPWAMobile))
- (NSString * _Nonnull)lgf_integrationTypeString SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)lgf_checkoutSettingsDictionaryWithSettings:(OPPCheckoutSettings * _Nonnull)settings SWIFT_WARN_UNUSED_RESULT;
@end



/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile24OPPLoggerServiceProtocol_")
@protocol OPPLoggerServiceProtocol
- (void)sendLogWithMessages:(NSArray<OPPLogMessage *> * _Nonnull)messages checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode :(void (^ _Nonnull)(BOOL))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile16OPPLoggerService")
@interface OPPLoggerService : NSObject <OPPLoggerServiceProtocol>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)sendLogWithMessages:(NSArray<OPPLogMessage *> * _Nonnull)messages checkoutID:(NSString * _Nonnull)checkoutID mode:(OPPProviderMode)mode :(void (^ _Nonnull)(BOOL))completionHandler;
@end



/// Utilities to get logos hard-coded in SDK
SWIFT_CLASS("_TtC11OPPWAMobile11OPPLogoUtil")
@interface OPPLogoUtil : NSObject
/// Returns the logo for the specified payment brand.
/// \param paymentBrand The payment brand to search the logo.
///
///
/// returns:
/// A logo image if found, otherwise nil.
+ (UIImage * _Nullable)logoForPaymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand SWIFT_WARN_UNUSED_RESULT;
/// Returns the logo for the specified payment brand (or text representation if image not found).
/// \param paymentBrand The payment brand to search the logo.
///
/// \param viewSize View size to fit brand name as text into it.
///
///
/// returns:
/// A logo image if found, otherwise an image with payment brand name as text.
+ (UIImage * _Nonnull)logoForPaymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand viewSize:(CGSize)viewSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPMBWayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPMBWAYDetailsViewController")
@interface OPPMBWAYDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPMBWayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPMBWAYDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)expiryDateTextField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPMBWayConfig;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPMBWayDetailsViewModel")
@interface OPPMBWayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider mbwayConfig:(OPPMBWayConfig * _Nullable)mbwayConfig checkoutID:(NSString * _Nonnull)checkoutID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile20OPPNetworkExecutable_")
@protocol OPPNetworkExecutable
- (void)executeWithRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC11OPPWAMobile18OPPNetworkExecutor")
@interface OPPNetworkExecutor : NSObject <OPPNetworkExecutable>
- (void)executeWithRequest:(NSURLRequest * _Nonnull)request completion:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexSet;
@class OPPNetworkResponse;

SWIFT_PROTOCOL("_TtP11OPPWAMobile30OPPNetworkResponseSerializable_")
@protocol OPPNetworkResponseSerializable
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11OPPWAMobile32OPPNetworkHTMLResponseSerializer")
@interface OPPNetworkHTMLResponseSerializer : NSObject <OPPNetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile33OPPNetworkImageResponseSerializer")
@interface OPPNetworkImageResponseSerializer : NSObject <OPPNetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum OPPNetworkRequestContentType : NSInteger;
enum OPPNetworkServiceMethod : NSInteger;

SWIFT_PROTOCOL("_TtP11OPPWAMobile29OPPNetworkRequestSerializable_")
@protocol OPPNetworkRequestSerializable
@property (nonatomic, readonly) enum OPPNetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11OPPWAMobile31OPPNetworkJSONRequestSerializer")
@interface OPPNetworkJSONRequestSerializer : NSObject <OPPNetworkRequestSerializable>
@property (nonatomic, readonly) enum OPPNetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile32OPPNetworkJSONResponseSerializer")
@interface OPPNetworkJSONResponseSerializer : NSObject <OPPNetworkResponseSerializable>
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull acceptableContentTypes;
@property (nonatomic, readonly, copy) NSIndexSet * _Nonnull acceptableStatusCodes;
- (NSError * _Nullable)validateResponse:(NSURLResponse * _Nullable)response data:(NSData * _Nullable)data SWIFT_WARN_UNUSED_RESULT;
- (OPPNetworkResponse * _Nonnull)responseWithData:(NSData * _Nullable)data urlResponse:(NSURLResponse * _Nullable)urlResponse SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile16OPPNetworkLogger_")
@protocol OPPNetworkLogger
- (void)logRequest:(NSURLRequest * _Nullable)request;
- (void)logResponse:(NSURLResponse * _Nullable)response;
@end


SWIFT_CLASS("_TtC11OPPWAMobile17OPPNetworkManager")
@interface OPPNetworkManager : NSObject
- (nonnull instancetype)initWithLogger:(id <OPPNetworkLogger> _Nullable)logger requestSerializer:(id <OPPNetworkRequestSerializable> _Nonnull)requestSerializer responseSerializer:(id <OPPNetworkResponseSerializable> _Nonnull)responseSerializer networkExecutor:(id <OPPNetworkExecutable> _Nonnull)networkExecutor OBJC_DESIGNATED_INITIALIZER;
- (void)executeWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, OPPNetworkRequestContentType, open) {
  OPPNetworkRequestContentTypeJson = 0,
  OPPNetworkRequestContentTypeUrl = 1,
};



SWIFT_CLASS("_TtC11OPPWAMobile27OPPNetworkRequestSerializer")
@interface OPPNetworkRequestSerializer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) id <OPPNetworkRequestSerializable> _Nonnull default_;)
+ (id <OPPNetworkRequestSerializable> _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (id <OPPNetworkRequestSerializable> _Nonnull)serializerWithContentType:(enum OPPNetworkRequestContentType)contentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11OPPWAMobile18OPPNetworkResponse")
@interface OPPNetworkResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, OPPNetworkResponseContentType, open) {
  OPPNetworkResponseContentTypeJson = 0,
  OPPNetworkResponseContentTypeImage = 1,
  OPPNetworkResponseContentTypeHtml = 2,
};



SWIFT_CLASS("_TtC11OPPWAMobile28OPPNetworkResponseSerializer")
@interface OPPNetworkResponseSerializer : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) id <OPPNetworkResponseSerializable> _Nonnull default_;)
+ (id <OPPNetworkResponseSerializable> _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
+ (id <OPPNetworkResponseSerializable> _Nonnull)serializerWithContentType:(enum OPPNetworkResponseContentType)contentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, OPPNetworkServiceMethod, open) {
  OPPNetworkServiceMethodGet = 0,
  OPPNetworkServiceMethodPost = 1,
};


SWIFT_CLASS("_TtC11OPPWAMobile30OPPNetworkURLRequestSerializer")
@interface OPPNetworkURLRequestSerializer : NSObject <OPPNetworkRequestSerializable>
@property (nonatomic, readonly) enum OPPNetworkRequestContentType contentType;
- (NSURLRequest * _Nullable)getUrlRequestWithApi:(NSString * _Nonnull)api baseUrl:(NSURL * _Nullable)baseUrl method:(enum OPPNetworkServiceMethod)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nonnull)headers error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PKPaymentButton;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPPKPaymentButtonTableViewCell")
@interface OPPPKPaymentButtonTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet PKPaymentButton * _Null_unspecified pkPaymentButton;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat OPPPKPaymentButtonTableViewCellHeight;)
+ (CGFloat)OPPPKPaymentButtonTableViewCellHeight SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentFormHeaderView")
@interface OPPPaymentFormHeaderView : UIView
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified logoView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified formTitleLabel;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified logoImageView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile22OPPPaymentParamBuilder")
@interface OPPPaymentParamBuilder : NSObject
+ (OPPPaymentParams * _Nullable)createPaymentParamsWithoutUI:(NSString * _Nonnull)paymentBrandString token:(OPPToken * _Nullable)token error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (void)updateWithPaymentParams:(OPPPaymentParams * _Nonnull)paymentParams with:(NSString * _Nonnull)checkoutId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class OPPPaymentProcessingViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentProcessingViewController")
@interface OPPPaymentProcessingViewController : OPPRootViewController <SFSafariViewControllerDelegate>
- (nullable instancetype)initWithViewModel:(OPPPaymentProcessingViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)configureUI;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile29OPPPaymentProcessingViewModel")
@interface OPPPaymentProcessingViewModel : NSObject
- (nonnull instancetype)initWithPaymentParams:(OPPPaymentParams * _Nonnull)paymentParams checkoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum OPPPaymentSchemeSectionType : NSInteger;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile27OPPPaymentSchemeSectionInfo")
@interface OPPPaymentSchemeSectionInfo : NSObject
@property (nonatomic, readonly) enum OPPPaymentSchemeSectionType sectionType;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSArray<OPPToken *> * _Nullable tokens;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable paymentBrands;
@property (nonatomic) CGFloat sectionHeight;
- (nonnull instancetype)initWithType:(enum OPPPaymentSchemeSectionType)type title:(NSString * _Nullable)title OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPPaymentSchemeSectionType, open) {
  OPPPaymentSchemeSectionTypeTokens = 0,
  OPPPaymentSchemeSectionTypeCards = 1,
  OPPPaymentSchemeSectionTypeApplePay = 2,
  OPPPaymentSchemeSectionTypeOther = 3,
};


/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentSchemeTableViewCell")
@interface OPPPaymentSchemeTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified paymentSchemeLogoImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified paymentSchemeTitleLabel;
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified logoView;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPPaymentSchemeViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPPaymentSchemeViewController")
@interface OPPPaymentSchemeViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPPaymentSchemeViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (CGFloat)preferredPresentationHeight SWIFT_WARN_UNUSED_RESULT;
- (void)configureUI;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPPaymentSchemeViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)navigationController:(UINavigationController * _Nonnull)navigationController didShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
@end


@interface OPPPaymentSchemeViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPPaymentSchemeViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile25OPPPaymentSchemeViewModel")
@interface OPPPaymentSchemeViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP11OPPWAMobile27OPPPaymentSelectionDelegate_")
@protocol OPPPaymentSelectionDelegate
- (void)paymentSelectionControllerDidSelectPaymentBrand:(NSString * _Nonnull)brand completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
- (void)paymentSelectionControllerDidSelectToken:(OPPToken * _Nonnull)token completionHandler:(void (^ _Nullable)(BOOL))completionHandler;
- (void)paymentSelectionControllerDidCancel;
- (void)paymentSelectionControllerCardTokens:(NSArray<OPPToken *> * _Nonnull)cardTokens;
- (void)paymentSelectionControllerPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands;
@end

@protocol OPPPaymentSchemeSelectionActionDelegate;

SWIFT_CLASS_NAMED("OPPPaymentSelectionViewController")
@interface OPPPaymentSelectionViewController : UIViewController <OPPPaymentSelectionDataSource, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, strong) id <OPPPaymentSchemeSelectionActionDelegate> _Nullable paymentSchemeActionDelegate;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)paymentSelectionControllerCardTokens:(NSArray<OPPToken *> * _Nonnull)cardTokens;
- (void)paymentSelectionControllerPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface OPPPaymentSelectionViewController (SWIFT_EXTENSION(OPPWAMobile)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
@end


@interface OPPPaymentSelectionViewController (SWIFT_EXTENSION(OPPWAMobile)) <UINavigationControllerDelegate>
- (void)navigationController:(UINavigationController * _Nonnull)navigationController didShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (UIInterfaceOrientationMask)navigationControllerSupportedInterfaceOrientations:(UINavigationController * _Nonnull)navigationController SWIFT_WARN_UNUSED_RESULT;
@end

@class OPPRatePayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPRatePayDetailsViewController")
@interface OPPRatePayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPRatePayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (void)cancelButtonAction;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPRatePayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPRatePayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile26OPPRatePayDetailsViewModel")
@interface OPPRatePayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPSCardDetailsViewModel")
@interface OPPSCardDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider paymentBrand:(OPPPaymentBrand _Nonnull)paymentBrand token:(OPPToken * _Nullable)token OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







/// :nodoc:
SWIFT_CLASS_NAMED("OPPSCheckoutTextField")
@interface OPPSCheckoutTextField : UITextField
@property (nonatomic) BOOL isDefaultContextMenu;
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPSTCPayDetailsViewModel;

/// :nodoc:
SWIFT_CLASS_NAMED("OPPSTCPayDetailsViewController")
@interface OPPSTCPayDetailsViewController : OPPRootViewController
- (nullable instancetype)initWithViewModel:(OPPSTCPayDetailsViewModel * _Nonnull)viewModel OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)configureUI;
- (void)configurePaymentFormHeaderView:(OPPPaymentFormHeaderView * _Nonnull)formHeaderView;
- (nullable instancetype)initWithCheckoutProvider:(OPPCheckoutProvider <SFSafariViewControllerDelegate> * _Nonnull)checkoutProvider SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface OPPSTCPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile))
- (void)didEnterBackground:(NSNotification * _Nonnull)notification;
- (void)didBecomeActive:(NSNotification * _Nonnull)notification;
@end


@interface OPPSTCPayDetailsViewController (SWIFT_EXTENSION(OPPWAMobile)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile25OPPSTCPayDetailsViewModel")
@interface OPPSTCPayDetailsViewModel : NSObject
- (nonnull instancetype)initWithCheckoutProvider:(OPPCheckoutProvider * _Nonnull)checkoutProvider OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OPPSThreeDSManagerDelegate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile18OPPSThreeDSManager")
@interface OPPSThreeDSManager : NSObject
@property (nonatomic, weak) id <OPPSThreeDSManagerDelegate> _Nullable delegate;
- (nonnull instancetype)initWithMode:(OPPProviderMode)mode OBJC_DESIGNATED_INITIALIZER;
- (void)proceedWithAppFlowWithTransaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nullable, NSError * _Nullable))completionHandler;
- (void)proceedWebFlowWith:(OPPTransaction * _Nullable)transaction :(void (^ _Nonnull)(OPPTransaction * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface OPPSThreeDSManager (SWIFT_EXTENSION(OPPWAMobile)) <SecurityEventListener>
- (void)alarm:(enum Severity)severity :(enum SecurityEvent)event;
@end


@interface OPPSThreeDSManager (SWIFT_EXTENSION(OPPWAMobile)) <ClientEventListener>
- (void)onDataPacketIn:(NSData * _Nonnull)dataPacket;
- (void)onDataPacketOut:(NSData * _Nonnull)dataPacket;
- (void)onError:(int32_t)errorCode :(NSString * _Nonnull)description;
- (void)onLog:(int32_t)logLevel :(NSString * _Nonnull)message :(NSString * _Nonnull)logType;
- (void)onSSLServerAuthentication:(NSData * _Nonnull)certEncoded :(NSString * _Nonnull)certSubject :(NSString * _Nonnull)certIssuer :(NSString * _Nonnull)status :(int32_t * _Nonnull)accept;
- (void)onSSLStatus:(NSString * _Nonnull)message;
@end

@class CompletionEvent;
@class ProtocolErrorEvent;
@class RuntimeErrorEvent;

@interface OPPSThreeDSManager (SWIFT_EXTENSION(OPPWAMobile)) <ChallengeStatusReceiver>
- (void)completed:(CompletionEvent * _Nonnull)completionEvent;
- (void)cancelled;
- (void)timedout;
- (void)protocolError:(ProtocolErrorEvent * _Nonnull)protocolErrorEvent;
- (void)runtimeError:(RuntimeErrorEvent * _Nonnull)runtimeErrorEvent;
@end


@class OPPThreeDSConfig;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile26OPPSThreeDSManagerDelegate_")
@protocol OPPSThreeDSManagerDelegate
- (void)onThreeDSChallengeRequiredWith:(void (^ _Nonnull)(UINavigationController * _Nullable))completion;
- (void)onThreeDSConfigRequiredWith:(void (^ _Nonnull)(OPPThreeDSConfig * _Nullable))completion;
- (void)sendThreeDS2AuthParamsWithParams:(NSString * _Nonnull)params transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPStorePaymentDetailsView")
@interface OPPStorePaymentDetailsView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified label;
@property (nonatomic, weak) IBOutlet UISwitch * _Null_unspecified switchControl;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
- (void)layoutSubviews;
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, OPPTextFieldContentType, open) {
  OPPTextFieldContentTypeCreditCardName = 0,
  OPPTextFieldContentTypeCreditCardExpiration = 1,
  OPPTextFieldContentTypeCreditCardSecurityCode = 2,
  OPPTextFieldContentTypeTelephoneNumber = 3,
  OPPTextFieldContentTypeName = 4,
  OPPTextFieldContentTypeBirthdate = 5,
};

@class UiCustomization;

/// Class that contains all possible configurations to be applied at <code>OPPThreeDSService</code> initialization phase.
SWIFT_CLASS("_TtC11OPPWAMobile16OPPThreeDSConfig")
@interface OPPThreeDSConfig : NSObject
/// Specific types of challenge interfaces.
/// They may vary for native way, e.g. present OTP or single select screen.
/// By default all UI types are supported, it’s strongly recommended by EMVCo.
@property (nonatomic) OPPThreeDSChallengeUiType challengeUiTypes;
/// The maximum amount of time (in minutes) for all exchanges for the 3-D Secure authentication.
/// Default value is 5 minutes.
@property (nonatomic) NSInteger sdkMaxTimeout;
/// The custom parameter for the /n software <code>Client</code> component.
/// See <a href="http://cdn.nsoftware.com/help/TS2/android/ClientConfig.htm" target="_blank"> /n software ClientConfig guide</a> for the keys.
/// Sample value <code>["AcceptAnyACSCert": "true"]</code>
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull clientConfigParams;
/// The expected bundle identifier for the application.
@property (nonatomic, copy) NSString * _Nonnull appBundleID;
/// The string that represents the locale for the app’s user interface.
@property (nonatomic, copy) NSString * _Nullable locale;
/// The list of device parameters that should NOT be collected for the device.
/// By default, the SDK will pull as many device parameters as it can.
/// Refer to the “EMV® 3-D Secure SDK—Device Information” guide to see the full list of possible device parameters and appropriate constants to be used.
/// Sample values would be <code>["A001", "A002"]</code>.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable deviceParameterBlacklist;
/// UI configuration information that is used to specify the UI layout and theme of the challenge screens, for example, font style and font size.
@property (nonatomic, strong) UiCustomization * _Nonnull uiCustomization;
/// Merchant app URL used by Authentication app to call the Merchant app after OOB authentication has occurred.
@property (nonatomic, copy) NSString * _Nullable threeDSRequestorAppURL;
/// Sets whether browser data is required or not.
/// If <code>isBrowserDataRequired</code> is set to <code>true</code>, the browser details will be collected and sent in payment request
/// By default it is set as false and browser details will not be collected.
/// for example - Browser height, language, Screen height and width, Timezone etc.
@property (nonatomic) BOOL isBrowserDataRequired;
/// Creates an object representing configuration information to be applied at <code>OPPThreeDSService</code>.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSSet<NSString *> * _Nonnull)getClientConfig SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDictionary<NSString *, NSString *> * _Nonnull)getUngroupedConfigParams SWIFT_WARN_UNUSED_RESULT;
@end


/// Class to represent all information needed to communicate securely with Directory Server (DS) and Access Control Server (ACS)
SWIFT_CLASS("_TtC11OPPWAMobile22OPPThreeDSSchemeConfig")
@interface OPPThreeDSSchemeConfig : NSObject
/// Directory Server ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsRefId;
/// Public certificate provided by the DS to encrypt device data.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsEncryptCert;
/// CA public certificate (root) of the DS-CA.
@property (nonatomic, readonly, copy) NSString * _Nonnull dsCaRootCert;
/// Creates an object representing information to connect to DS and ACS.
/// \param dsRefId Directory Server ID.
///
/// \param dsEncryptCert Public certificate provided by the DS to encrypt device data.
///
/// \param dsCaRootCert CA public certificate (root) of the DS-CA.
///
///
/// returns:
/// Returns an object representing information to connect to DS and ACS.
- (nonnull instancetype)initWithDsRefId:(NSString * _Nonnull)dsRefId dsEncryptCert:(NSString * _Nonnull)dsEncryptCert dsCaRootCert:(NSString * _Nonnull)dsCaRootCert OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPTokenCollectionViewCell")
@interface OPPTokenCollectionViewCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UIView * _Null_unspecified paymentBrandLogoView;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified paymentBrandImageView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified paymentBrandDetailLabel;
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile24OPPTokensSectionDelegate")
@interface OPPTokensSectionDelegate : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull OPPTokenCollectionViewCellReuseId;)
+ (NSString * _Nonnull)OPPTokenCollectionViewCellReuseId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTokens:(NSArray<OPPToken *> * _Nonnull)tokens didSelect:(void (^ _Nonnull)(OPPToken * _Nonnull))didSelect OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPTokensSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface OPPTokensSectionDelegate (SWIFT_EXTENSION(OPPWAMobile)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPTokensTableViewCell")
@interface OPPTokensTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("OPPTotalAmountView")
@interface OPPTotalAmountView : UIView
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified headerLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified amountLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)awakeFromNib;
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile9OPPUIUtil")
@interface OPPUIUtil : NSObject
/// Finds and returns the top view controller on the screen
/// @return A top view controller on the screen
+ (UIViewController * _Nullable)findTopViewController SWIFT_WARN_UNUSED_RESULT;
/// Returns current interface orientation
/// @return current interface orientation
+ (UIInterfaceOrientation)interfaceOrientation SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPortraitOrientation SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;
@class NSDate;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile7OPPUtil")
@interface OPPUtil : NSObject
/// Returns formatted amount depending on the currency
+ (NSString * _Nonnull)formattedAmountWithAmount:(NSNumber * _Nonnull)amount currencyCode:(NSString * _Nonnull)currencyCode SWIFT_WARN_UNUSED_RESULT;
/// Returns formatted numeric digits
+ (NSString * _Nullable)formattedNumericDigitsFor:(NSString * _Nonnull)digits SWIFT_WARN_UNUSED_RESULT;
/// Returns string with Whitespaces regarding pattern
+ (NSString * _Nonnull)addWhitespacesTo:(NSString * _Nonnull)text pattern:(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the character is from 0 to 9
+ (BOOL)isNumericDigit:(unichar)digit SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the string consists only of numeric digits
+ (BOOL)isCardNumberFormattingAllowedWithCardNumber:(NSString * _Nonnull)cardNumber SWIFT_WARN_UNUSED_RESULT;
/// Returns ‘YES’ if the string matches the date with format
+ (BOOL)isDateValid:(NSString * _Nonnull)dateString withFormat:(NSString * _Nonnull)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// Returns month from expiration date in ‘MM’ format
+ (NSString * _Nullable)cardExpirationMonthFrom:(NSString * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
/// Returns year from expiration date in ‘YYYY’ format
+ (NSString * _Nullable)cardExpirationYearFrom:(NSString * _Nullable)expirationDate SWIFT_WARN_UNUSED_RESULT;
/// Return date from the string in the format
+ (NSDate * _Nullable)dateFrom:(NSString * _Nonnull)dateStr withFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
/// Return string from the date in the format
+ (NSString * _Nullable)stringFrom:(NSDate * _Nullable)date withFormat:(NSString * _Nullable)dateFormat SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class OPPBinInfo;
@class Warning;

/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile22OPPWAProcessorProtocol_")
@protocol OPPWAProcessorProtocol
@property (nonatomic, strong) OPPSThreeDSManager * _Nullable threeDSManager;
/// On sending a transaction, it is performed asynchronously using an NSURLSession to communicate with the Server. Depending on the endpoint the transaction will be submitted or registered only without making the payment.
/// @param transaction The transaction to be sent.
/// @param endpoint The endpoint which will be used for processing transaction. The endpoint must start with a “/”.
/// @param completionHandler A block executed when the transaction is sent.
- (void)sendWithTransaction:(OPPTransaction * _Nonnull)transaction toEndPoint:(NSString * _Nonnull)toEndPoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
/// Requests checkout details such as amount, currency and tokens from the Server by checkout ID.
/// Request is performed asynchronously using an NSURLConnection.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block will be invoked once the response in received. On success, you will receive an instance of <code>OPPCheckoutInfo</code>; on failure, an error.
- (void)requestCheckoutInfoWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
/// Requests logo URLs for specified payment brands.
/// Request is performed asynchronously using an NSURLSession.
/// @param paymentBrands The list of payment brands to get logos from the Server.
/// @param completionHandler The completion block will be invoked once the response in received. On success, you will receive a dictionary with URLs in format <paymentBrand: URL>; on failure, an error.
- (void)requestLogoURLsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
/// On sending a 3-D Secure 2 authentication params to the Server.
/// @param authParams The 3-D Secure 2 authentication params to be sent.
/// @param transaction The transaction to be used to get <code>OPPThreeDS2Info</code>.
/// @param completionHandler A block executed when the transaction is sent.
- (void)sendThreeDS2WithAuthParams:(NSString * _Nonnull)authParams transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
/// Requests brand validations from the Server by checkout ID.
/// Request is performed asynchronously using an NSURLConnection.
/// @param paymentBrands The list of payment brands to be validated.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block will be invoked once the response in received.
- (void)requestValidationsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
/// Request <code>OPPBinInfo</code> for provided card bin
/// @param checkoutID The checkout ID of a transaction.
/// @param bin First 6 or more digits of the card number.
/// @param completionHandler The completion block will be invoked once the response in received.
- (void)requestBinInfoWithCheckoutID:(NSString * _Nonnull)checkoutID bin:(NSString * _Nonnull)bin :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
/// Requests the list of IDEAL banks from the Server by checkout ID.
/// Request is performed asynchronously using an NSURLConnection.
/// This method is deprecated.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block will be invoked once the response in received.
- (void)requestIdealBanksWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler SWIFT_DEPRECATED;
/// Requests a Apple’s  recurring payments tokenId.
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block which will be invoked once the response is received. On success, you will receive a tokenId, and on failure an error is received.
- (void)requestApplesTokenIdWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
/// Requests a Checkout  payment data
/// @param checkoutID The checkout ID of a transaction.
/// @param completionHandler The completion block which will be invoked once the response is received. On success, you will receive an OPPCheckoutData ojbect with payment data, and on failure an error is received.
- (void)requestCheckoutDataWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
/// The ipworks3ds SDK performs security checks in order to provide a  list of <code>Warning</code> objects. These can be checked by the app to determine whether or not to proceed with the checkout process.
/// @param completionHandler The completion block will be invoked once the performing of security checks is done . On success, you will receive an instance of <code>Warning</code>; on failure, an error.
- (void)securityWarningsWithCompletionHandler:(void (^ _Nonnull)(NSArray<Warning *> * _Nullable, NSError * _Nullable))completionHandler;
@end


/// :nodoc:
SWIFT_PROTOCOL("_TtP11OPPWAMobile29OPPWAProcessorServiceProtocol_")
@protocol OPPWAProcessorServiceProtocol
- (void)sendTransactionFor:(OPPTransaction * _Nonnull)transaction endpoint:(NSString * _Nonnull)endpoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)checkoutInfoFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)logoUrlsFor:(NSArray<NSString *> * _Nonnull)brands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2For:(OPPTransaction * _Nonnull)transaction with:(NSString * _Nonnull)authParams :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)validationFor:(NSArray<NSString *> * _Nonnull)brands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)binInfoFor:(NSString * _Nonnull)bin checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)idealBanksFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)appleTokenFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)checkoutDataFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
@end

@class OPPWAResponseParser;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPWAProcessorService")
@interface OPPWAProcessorService : NSObject <OPPWAProcessorServiceProtocol>
- (nonnull instancetype)initWithMode:(OPPProviderMode)mode parser:(OPPWAResponseParser * _Nonnull)parser OBJC_DESIGNATED_INITIALIZER;
- (void)sendTransactionFor:(OPPTransaction * _Nonnull)transaction endpoint:(NSString * _Nonnull)endpoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)checkoutInfoFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)logoUrlsFor:(NSArray<NSString *> * _Nonnull)brands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2For:(OPPTransaction * _Nonnull)transaction with:(NSString * _Nonnull)authParams :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)validationFor:(NSArray<NSString *> * _Nonnull)brands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)binInfoFor:(NSString * _Nonnull)bin checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)idealBanksFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)appleTokenFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)checkoutDataFor:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile19OPPWAResponseParser")
@interface OPPWAResponseParser : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile21OPPWASPaymentProvider")
@interface OPPWASPaymentProvider : OPPPaymentProvider
- (nonnull instancetype)initWithMode:(OPPProviderMode)mode processor:(id <OPPWAProcessorProtocol> _Nullable)processor OBJC_DESIGNATED_INITIALIZER;
- (void)sendTransaction:(OPPTransaction * _Nonnull)transaction toEndpoint:(NSString * _Nonnull)endpoint completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)submitTransaction:(OPPTransaction * _Nonnull)transaction completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)registerTransaction:(OPPTransaction * _Nonnull)transaction completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestCheckoutInfoWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestLogoURLsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands completionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestBinInfoWithCheckoutID:(NSString * _Nonnull)checkoutID bin:(NSString * _Nonnull)bin completionHandler:(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestIdealBanksWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(NSArray<NSDictionary *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)securityWarningsWithCompletionHandler:(void (^ _Nonnull)(NSArray<Warning *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2AuthParams:(NSString * _Nonnull)authParams transaction:(OPPTransaction * _Nonnull)transaction completionHandler:(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestApplesTokenIdWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestValidationsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestCheckoutDataWithCheckoutID:(NSString * _Nonnull)checkoutID completionHandler:(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OPPWASPaymentProvider (SWIFT_EXTENSION(OPPWAMobile)) <OPPSThreeDSManagerDelegate>
- (void)onThreeDSChallengeRequiredWith:(void (^ _Nonnull)(UINavigationController * _Nullable))completion;
- (void)onThreeDSConfigRequiredWith:(void (^ _Nonnull)(OPPThreeDSConfig * _Nullable))completion;
- (void)sendThreeDS2AuthParamsWithParams:(NSString * _Nonnull)params transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPWASProcessor")
@interface OPPWASProcessor : NSObject <OPPWAProcessorProtocol>
@property (nonatomic, strong) OPPSThreeDSManager * _Nullable threeDSManager;
- (nonnull instancetype)initWithThreeDSManager:(OPPSThreeDSManager * _Nullable)threeDSManager mode:(OPPProviderMode)mode service:(id <OPPWAProcessorServiceProtocol> _Nonnull)service OBJC_DESIGNATED_INITIALIZER;
- (void)sendWithTransaction:(OPPTransaction * _Nonnull)transaction toEndPoint:(NSString * _Nonnull)toEndPoint :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestCheckoutInfoWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestLogoURLsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands :(void (^ _Nonnull)(NSDictionary<NSString *, NSURL *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)sendThreeDS2WithAuthParams:(NSString * _Nonnull)authParams transaction:(OPPTransaction * _Nonnull)transaction :(void (^ _Nonnull)(OPPTransaction * _Nonnull, NSError * _Nullable))completionHandler;
- (void)requestValidationsForPaymentBrands:(NSArray<NSString *> * _Nonnull)paymentBrands checkoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<OPPBrandInfo *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestBinInfoWithCheckoutID:(NSString * _Nonnull)checkoutID bin:(NSString * _Nonnull)bin :(void (^ _Nonnull)(OPPBinInfo * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestIdealBanksWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestApplesTokenIdWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completionHandler;
- (void)requestCheckoutDataWithCheckoutID:(NSString * _Nonnull)checkoutID :(void (^ _Nonnull)(OPPCheckoutData * _Nullable, NSError * _Nullable))completionHandler;
- (void)securityWarningsWithCompletionHandler:(void (^ _Nonnull)(NSArray<Warning *> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIColor;

/// :nodoc:
SWIFT_CLASS("_TtC11OPPWAMobile15OPPWebViewUtils")
@interface OPPWebViewUtils : NSObject
+ (BOOL)isFinalAsyncReachedWith:(NSString * _Nullable)redirectString shopperResultUrl:(NSString * _Nullable)shopperResultUrl SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)redirectUrlPresentWithRedirectString:(NSString * _Nullable)redirectString contain:(NSString * _Nullable)shopperResultUrl SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)redirectUrlPresentWithRedirectString:(NSString * _Nullable)redirectString conformsTo:(NSString * _Nonnull)pattern SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)colorToString:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)fileContentWithName:(NSString * _Nonnull)filename error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)boolToString:(BOOL)boolValue SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface PKPaymentRequest (SWIFT_EXTENSION(OPPWAMobile))
- (BOOL)updatePaymentRequestFor:(OPPProviderMode)mode tokenId:(NSString * _Nonnull)tokenId SWIFT_WARN_UNUSED_RESULT;
@end






@interface UIImageView (SWIFT_EXTENSION(OPPWAMobile))
/// Downloads logo asynchronously for specified payment brand.
/// Important: use loadImageForPaymentBrand:checkAccessibilityId: to load images in reusable elements like UITableViewCell.
/// @param paymentBrand Payment brand to load logo.
- (void)loadImageForPaymentBrand:(NSString * _Nonnull)paymentBrand;
/// Downloads logo asynchronously for specified payment brand.
/// Method updates an image only if accessibilityId was not changed while loading image.
/// This check is ignored if accessibilityId is nil.
/// @param paymentBrand Payment brand to load logo.
/// @param accessibilityId Accessibility identifier that will be set to the image view, and validated after asynchronous image loading.
- (void)loadImageForPaymentBrand:(NSString * _Nonnull)paymentBrand accessibilityId:(NSString * _Nullable)accessibilityId;
@end

@class UIFont;
@class OPPCheckoutTheme;

@interface UILabel (SWIFT_EXTENSION(OPPWAMobile))
- (void)configureWithTitle:(NSString * _Nonnull)title font:(UIFont * _Nonnull)font isHighLighted:(BOOL)isHighLighted theme:(OPPCheckoutTheme * _Nonnull)theme;
@end


@interface UITextField (SWIFT_EXTENSION(OPPWAMobile))
- (void)updateOPPTextContentType:(enum OPPTextFieldContentType)contentType;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
